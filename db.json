{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-snippet/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/assets/highlight.pack.js","path":"assets/highlight.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/assets/tagcanvas.min.js","path":"assets/tagcanvas.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/branding.png","path":"img/branding.png","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/head-img.jpg","path":"img/head-img.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/learn_jdk.jpg","path":"img/learn_jdk.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/reward-wepay.jpg","path":"img/reward-wepay.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/timeline-clock.gif","path":"img/timeline-clock.gif","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/timeline-dot.gif","path":"img/timeline-dot.gif","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/timeline.gif","path":"img/timeline.gif","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/tool.png","path":"img/tool.png","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/assets/valine.min.js","path":"assets/valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/js/valine.min.js","path":"js/valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/fonts/FontAwesome.otf","path":"fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/top_one.png","path":"img/top_one.png","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/top_two.jpg","path":"img/top_two.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/js/love.js","path":"js/love.js","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/js/value_of_core.js","path":"js/value_of_core.js","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-snippet/source/img/article/tool/hexo.jpg","path":"img/article/tool/hexo.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hexo-snippet/.gitignore","hash":"966980bf3a75dbcdc09b08664e6084139799b498","modified":1551753806038},{"_id":"themes/hexo-snippet/.travis.yml","hash":"cd8751ca3b18af6f1dde73d93ff229fcad6f182c","modified":1552015336545},{"_id":"themes/hexo-snippet/LICENSE","hash":"c720db99e36a717d9808bf97b736612462e883dd","modified":1551753806041},{"_id":"themes/hexo-snippet/README.md","hash":"5095da973cc9ccc995b031df5943a5dc94136fb9","modified":1551753806041},{"_id":"themes/hexo-snippet/_config.yml","hash":"9585ae0d5c53a628cb20deb7392c20d0f381bc59","modified":1552039325062},{"_id":"themes/hexo-snippet/_travis.sh","hash":"851518360d8c42afa614b9495574af56f28bd8cf","modified":1551943142483},{"_id":"themes/hexo-snippet/gulpfile.js","hash":"16aae4664f8077b8974e460c7dbcbda131b433e3","modified":1551753806041},{"_id":"themes/hexo-snippet/package.json","hash":"46b6ad0283a211bd38a44f3ed49981bd1626f1b7","modified":1551756375040},{"_id":"source/tags/index.md","hash":"23014e944a74c76e2343b24e4a15e006a8431f45","modified":1551433350234},{"_id":"themes/hexo-snippet/.github/ISSUE_TEMPLATE.md","hash":"e90f313849ccea4f9fe86f7d3611dfaa6a7d3e8b","modified":1551753806038},{"_id":"themes/hexo-snippet/languages/default.yml","hash":"358313b8a4a48bd32c7d58fc9ef3a4ebe395bf8d","modified":1551753806041},{"_id":"themes/hexo-snippet/languages/ja.yml","hash":"fcafdb03d5e000c225a664d65f38a75c7efdef03","modified":1551753806041},{"_id":"themes/hexo-snippet/languages/zh-CN.yml","hash":"336c66d9a6e18ec9e4d609af1fd1a829dd1768a3","modified":1551836854583},{"_id":"themes/hexo-snippet/languages/zh-TW.yml","hash":"a0bd8ba3e9ad19116e072983cfefd1aabe39d2cd","modified":1551753806041},{"_id":"themes/hexo-snippet/layout/archive.ejs","hash":"bbd99d08132f9ca87e5b17cf642384dc1673f579","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/category.ejs","hash":"ebd05ceb75be73e84ddf085ccfdb24c07162d0fa","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/index.ejs","hash":"b64f787382b922d492cb7cd6ed96cce8d512e6d9","modified":1552273993070},{"_id":"themes/hexo-snippet/layout/layout.ejs","hash":"e5e06ba01d5abcc013905ba9b8ca682f854a124b","modified":1552038092521},{"_id":"themes/hexo-snippet/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/post.ejs","hash":"d0aa6f0fda520815307d2adc2aacaf5314919d8f","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/tag.ejs","hash":"9b42656e75c58e7145e52408b51f017f6b6d9464","modified":1551753806042},{"_id":"themes/hexo-snippet/scripts/helper.js","hash":"836d369cf95ac51de957e09d396e6a8be1e84cf6","modified":1551753806042},{"_id":"themes/hexo-snippet/scripts/process.js","hash":"c2f0571899a6dd38bd944aaf47e21fc650f7d52e","modified":1551753806042},{"_id":"themes/hexo-snippet/source/favicon.ico","hash":"8b0857ef1f07d5374bb1a2ce7b9ea472c26ef367","modified":1551774284236},{"_id":"source/_posts/java/learn-jdk-start.md","hash":"8a2b1d5f0516c927b4d18835248afd657bba484d","modified":1552273972705},{"_id":"themes/hexo-snippet/.github/ISSUE_TEMPLATE/bug_report.md","hash":"8808d24b20e4969c1b687d17cf832e8fac147cc8","modified":1551753806038},{"_id":"themes/hexo-snippet/.github/ISSUE_TEMPLATE/feature_request.md","hash":"ca7ec6dc303459058d3117f33878beec538d3023","modified":1551753806038},{"_id":"themes/hexo-snippet/layout/_partial/archive.ejs","hash":"cc21d71c87829f90686a3f6e5ac4d8665c871c25","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/article-meta.ejs","hash":"40f3cc7d88f72f58d320457a0e939e00605fcb1d","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/article.ejs","hash":"ecc6775b64c4b87a62fae4f8a2545105e40e7dfe","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/busuanzi.ejs","hash":"2c26222dc1c8da66135241fdc84d16ba66ae285c","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/copyright.ejs","hash":"5f9d229b82cb63754ca0aed7fbe7e33d3dc75e69","modified":1552033308036},{"_id":"themes/hexo-snippet/layout/_partial/footer.ejs","hash":"4a5b6fa1520442ac4edc2ec3d575a676b6717854","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/gallery.ejs","hash":"1b6b7859f395e10a3ecaa900de2d1312dc140def","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/head.ejs","hash":"1aea0e44f11d9f6f3e78f0da7dba0f35b910e6c3","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/header.ejs","hash":"ef784d953e775ca845aacc10b62df1e83d53614c","modified":1551843475544},{"_id":"themes/hexo-snippet/layout/_partial/nav.ejs","hash":"7fa65a2162a748f049fb910b5b0e46a5bcf57b3b","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/pagination.ejs","hash":"2ec88a22fd29e7cc97ca2a508eee7d168e338969","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/reward.ejs","hash":"8ea91bdf01c946c76f4bd671768c8b930c7de446","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/script.ejs","hash":"0ecdc42c6c1c2474d9e306de39323f089dddf7af","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/sidebar.ejs","hash":"381b7af719c1ab3a94280309926c1205ce7b93a5","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/toc.ejs","hash":"7d86def87d0e7b7ab15400a23b0796f0da430e60","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_vendor/baidu_sitemap.ejs","hash":"dabeccfd4860dac2f6b883616f616c4c55fb22ba","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_widget/about.ejs","hash":"8234e0fb4245ea7386e917eaa9824fbf33acfe35","modified":1551843378107},{"_id":"themes/hexo-snippet/layout/_widget/archive.ejs","hash":"ea6596d993ed1b74bd03eee06ab480931b8c2d9e","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_widget/category.ejs","hash":"698e17d4fa00a78bed5609e407e938d5f131ea77","modified":1552031325327},{"_id":"themes/hexo-snippet/layout/_widget/friends.ejs","hash":"43b0404d608db1a237b3cf17ec8df7b2d24f9533","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_widget/notification.ejs","hash":"78eca9de4eec7c638c7b16863fb90e7182f7d80b","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_widget/search.ejs","hash":"dfbf723051f71099502c58a237bc484cebd5157d","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_widget/social.ejs","hash":"f97313cdc1b495f7602e023b2ade5630acc4b667","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_widget/tagcloud.ejs","hash":"21746717296515c5b45a8fd5ef302ef8a9470bb2","modified":1551753806042},{"_id":"themes/hexo-snippet/source/assets/highlight.pack.js","hash":"f39840759ec9afe56ec1ca30579d1f1c9d1f6026","modified":1551753806042},{"_id":"themes/hexo-snippet/source/assets/tagcanvas.min.js","hash":"a14280f4e924428ac0cdbac7635a7279cab1b6bf","modified":1551753806042},{"_id":"themes/hexo-snippet/source/css/font-awesome.min.css","hash":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1551753806046},{"_id":"themes/hexo-snippet/source/css/style.css","hash":"c9b64a6528b5ad3f4e1a98237a4f6a4fb0c25163","modified":1551841594067},{"_id":"themes/hexo-snippet/source/img/avatar.jpg","hash":"0242068826b3f80a3059eb24aa62ea7e5ec84966","modified":1551925001080},{"_id":"themes/hexo-snippet/source/img/branding.png","hash":"18bee49d6a4c521ad230047c0b416245e009c2c9","modified":1551753806051},{"_id":"themes/hexo-snippet/source/img/head-img.jpg","hash":"a318d304665c2f410f79e6d2eb1b98119f675b4b","modified":1551753806051},{"_id":"themes/hexo-snippet/source/img/learn_jdk.jpg","hash":"4f6d10feef11b17e2d955891928fb3f12c4f547b","modified":1458898342000},{"_id":"themes/hexo-snippet/source/img/reward-wepay.jpg","hash":"2a56391f2b6282b49e724b72bf610b0dabf53742","modified":1551753806051},{"_id":"themes/hexo-snippet/source/img/timeline-clock.gif","hash":"2bec1bf5efd948ab2e5942b6da8164faa41b62b2","modified":1551753806051},{"_id":"themes/hexo-snippet/source/img/timeline-dot.gif","hash":"c85ef87be5b631c009e7c5737d33b61dfe580a4d","modified":1551753806054},{"_id":"themes/hexo-snippet/source/img/timeline.gif","hash":"b7c7aac44e618df19626d882dc46db48a4aa3673","modified":1551753806054},{"_id":"themes/hexo-snippet/source/img/tool.png","hash":"3be0d778898494e9870b8009db6ee1e5530103e3","modified":1551774353048},{"_id":"themes/hexo-snippet/source/js/app.js","hash":"eca509fc5b45dcd1a0007c62f740529ca31a122f","modified":1551753806054},{"_id":"themes/hexo-snippet/source/js/search.js","hash":"a6c7ac73821e5c7db7d4ae6de2d00f44367a858e","modified":1551753806054},{"_id":"themes/hexo-snippet/source/assets/valine.min.js","hash":"d9d4a8f81f288b77b3d0a3866d004e2b5eb30038","modified":1551753806042},{"_id":"themes/hexo-snippet/source/css/bootstrap.min.css","hash":"6527d8bf3e1e9368bab8c7b60f56bc01fa3afd68","modified":1551753806042},{"_id":"themes/hexo-snippet/source/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1551753806051},{"_id":"themes/hexo-snippet/source/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1551753806051},{"_id":"themes/hexo-snippet/source/img/loading.gif","hash":"6cea4dc953ac09fb744c7fedc12a1f4736faf8ec","modified":1551753806051},{"_id":"themes/hexo-snippet/source/js/valine.min.js","hash":"d9d4a8f81f288b77b3d0a3866d004e2b5eb30038","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/_head-sections/IE.ejs","hash":"567494a97ba2db7bb452294a9980b4d63b399ef0","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/_head-sections/seo.ejs","hash":"8cf5d4347c69c0999d756e06374039572c9ed975","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/_head-sections/style.ejs","hash":"ece8b1bb0f550ddb0e7ac179de54a8e5f06f49aa","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_partial/_head-sections/title.ejs","hash":"1482f56c44221cbc0d28ba06e377f4b55cdaacc2","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_vendor/analytics/baidu.ejs","hash":"eb4a75fb5ba9237d93430e727165d98ccda75a02","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_vendor/analytics/cnzz.ejs","hash":"8bfc514b178fafd81cc8181880afc5c9cbee02dc","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_vendor/analytics/google.ejs","hash":"91844d4521f97517ea9f169ee85b18c9d0d8cf17","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_vendor/analytics/index.ejs","hash":"6315abe9c31f4c4de719fa3cbfa2b1c6f294b0de","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_vendor/analytics/tencent.ejs","hash":"10b91084cda9067d037a5f31e48d4edcbaa0c751","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_vendor/comments/changyan.ejs","hash":"202c94162ac2eeb0c93c8d2667c82b8705de6390","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_vendor/comments/disqus.ejs","hash":"7b5e05154be0408be110893439bfa33e262245de","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_vendor/comments/gitalk.ejs","hash":"a855974cdeff4ff578d9bdf40e89eff439f2c3fe","modified":1551926849948},{"_id":"themes/hexo-snippet/layout/_vendor/comments/gitment.ejs","hash":"2c225412d0848c6642aa409b6f1ec92f767c8779","modified":1551926514936},{"_id":"themes/hexo-snippet/layout/_vendor/comments/index.ejs","hash":"99dc8370fabb5302cc9810041e453302ecd98e82","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_vendor/comments/livere.ejs","hash":"6333308ba24ae6f2a3e73f4cdc1b42e024d19910","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_vendor/comments/uyan.ejs","hash":"2c2abe17f4f5c5ba1a9aaa948ef0a88d99f653f8","modified":1551753806042},{"_id":"themes/hexo-snippet/layout/_vendor/comments/valine.ejs","hash":"e477b96c35d07963aa55f83be746c286802a6c76","modified":1551929880309},{"_id":"themes/hexo-snippet/source/css/less/_highlight.less","hash":"c799cfa32c323c33a09569d326786874026fd1ef","modified":1551753806046},{"_id":"themes/hexo-snippet/source/css/less/_mixins.less","hash":"e89dc55772b5ae6bfd4cac3b5c32bf9ce73ac805","modified":1551753806046},{"_id":"themes/hexo-snippet/source/css/less/_reward.less","hash":"100caed190893351a1ca7ed8e72bad57695d5f19","modified":1551753806046},{"_id":"themes/hexo-snippet/source/css/less/_scrollbar.less","hash":"596ee6ada077f94a05d7c0168dddb20be16b85da","modified":1551753806046},{"_id":"themes/hexo-snippet/source/css/less/_style.less","hash":"b64793abd9ee0f0670c3eafd15ab8ad633ebf1d2","modified":1551753806046},{"_id":"themes/hexo-snippet/source/css/less/_timeline.less","hash":"0bb3cef8b58621455d023c30d81fae204200d3bb","modified":1551753806046},{"_id":"themes/hexo-snippet/source/css/less/_variable.less","hash":"1d81728d61de486a7a746beb19275b2b4b65e304","modified":1551753806046},{"_id":"themes/hexo-snippet/source/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1551753806047},{"_id":"themes/hexo-snippet/source/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1551753806049},{"_id":"themes/hexo-snippet/source/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1551753806051},{"_id":"themes/hexo-snippet/source/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1551753806051},{"_id":"themes/hexo-snippet/source/img/top_one.png","hash":"382d07c00d87b262fb7210bd77d08952ee33b48e","modified":1551837615767},{"_id":"source/_posts/debug.log","hash":"db7d2bec7d5cecc41836339ba30a6a4e98cef0e9","modified":1551432000546},{"_id":"themes/hexo-snippet/db.json","hash":"4cf45e5d9858be69b0bac8841decc5d4563f6221","modified":1552037907845},{"_id":"themes/hexo-snippet/source/img/top_two.jpg","hash":"ccbb1fc400e60a62caa4c23b085e2c559da24097","modified":1551837616655},{"_id":"public/atom.xml","hash":"c14f17457ad41612caf7d7eb717067846d09bc59","modified":1552022086614},{"_id":"public/content.json","hash":"7413cb97a1dd32390b0559f3e0a69e52286e252a","modified":1552022086614},{"_id":"public/sitemap.xml","hash":"4bff4c30d97d3a44ba84d2d118afcd4186214b25","modified":1552022086786},{"_id":"public/tags/index.html","hash":"99fb7b15a1b2c3b5302f41d45c1d4aaf1fc56037","modified":1552022086792},{"_id":"public/archives/index.html","hash":"3033b0e564fdf5445a43eaecf6185d376fa32489","modified":1552022086792},{"_id":"public/archives/2019/index.html","hash":"0b470d67b15c69006517fcbbd3e4adf46e799c3c","modified":1552022086792},{"_id":"public/archives/2019/10/index.html","hash":"d012ce2b621cb2fa4e02c8171d5f2dda3bd162e1","modified":1552022086792},{"_id":"public/categories/技术文章/index.html","hash":"99bf5c698df83def2c93d0cfb0b1cf1564e8b03b","modified":1552022086792},{"_id":"public/categories/技术文章/java/index.html","hash":"63ce6dcd24a6790d4a1d4080adcc5319167fa3fd","modified":1552022086792},{"_id":"public/categories/技术文章/java/后端/index.html","hash":"d41502d0d230be1792ce276ab0f31bf0bdab93b2","modified":1552022086792},{"_id":"public/index.html","hash":"fac1341830fdfd04f07e031b06179456a63d1f1c","modified":1552022086792},{"_id":"public/tags/jdk源码/index.html","hash":"394aed23a723cd79ac5e329dc9249d320d596378","modified":1552022086792},{"_id":"public/java/learn-jdk-start/index.html","hash":"dd79358db092909f3af20494c61d348569ef1af5","modified":1552022086792},{"_id":"public/img/avatar.jpg","hash":"0242068826b3f80a3059eb24aa62ea7e5ec84966","modified":1552022086795},{"_id":"public/img/branding.png","hash":"18bee49d6a4c521ad230047c0b416245e009c2c9","modified":1552022086795},{"_id":"public/img/head-img.jpg","hash":"a318d304665c2f410f79e6d2eb1b98119f675b4b","modified":1552022086795},{"_id":"public/img/learn_jdk.jpg","hash":"4f6d10feef11b17e2d955891928fb3f12c4f547b","modified":1552022086795},{"_id":"public/img/reward-wepay.jpg","hash":"2a56391f2b6282b49e724b72bf610b0dabf53742","modified":1552022086795},{"_id":"public/img/timeline-clock.gif","hash":"2bec1bf5efd948ab2e5942b6da8164faa41b62b2","modified":1552022086795},{"_id":"public/img/timeline-dot.gif","hash":"c85ef87be5b631c009e7c5737d33b61dfe580a4d","modified":1552022086795},{"_id":"public/img/timeline.gif","hash":"b7c7aac44e618df19626d882dc46db48a4aa3673","modified":1552022086795},{"_id":"public/img/tool.png","hash":"3be0d778898494e9870b8009db6ee1e5530103e3","modified":1552022086795},{"_id":"public/favicon.ico","hash":"8b0857ef1f07d5374bb1a2ce7b9ea472c26ef367","modified":1552022086827},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1552022086827},{"_id":"public/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1552022086828},{"_id":"public/img/loading.gif","hash":"6cea4dc953ac09fb744c7fedc12a1f4736faf8ec","modified":1552022086828},{"_id":"public/js/app.js","hash":"eca509fc5b45dcd1a0007c62f740529ca31a122f","modified":1552022086829},{"_id":"public/js/search.js","hash":"a6c7ac73821e5c7db7d4ae6de2d00f44367a858e","modified":1552022086829},{"_id":"public/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1552022086844},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1552022086844},{"_id":"public/assets/highlight.pack.js","hash":"f39840759ec9afe56ec1ca30579d1f1c9d1f6026","modified":1552022086845},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1552022086854},{"_id":"public/css/font-awesome.min.css","hash":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1552022086857},{"_id":"public/css/style.css","hash":"c9b64a6528b5ad3f4e1a98237a4f6a4fb0c25163","modified":1552022086857},{"_id":"public/assets/tagcanvas.min.js","hash":"a14280f4e924428ac0cdbac7635a7279cab1b6bf","modified":1552022086864},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1552022086869},{"_id":"public/assets/valine.min.js","hash":"d9d4a8f81f288b77b3d0a3866d004e2b5eb30038","modified":1552022086871},{"_id":"public/js/valine.min.js","hash":"d9d4a8f81f288b77b3d0a3866d004e2b5eb30038","modified":1552022086871},{"_id":"public/img/top_one.png","hash":"382d07c00d87b262fb7210bd77d08952ee33b48e","modified":1552022086872},{"_id":"public/css/bootstrap.min.css","hash":"6527d8bf3e1e9368bab8c7b60f56bc01fa3afd68","modified":1552022086877},{"_id":"public/img/top_two.jpg","hash":"ccbb1fc400e60a62caa4c23b085e2c559da24097","modified":1552022086887},{"_id":"themes/hexo-snippet/source/img/favicon.ico","hash":"8b0857ef1f07d5374bb1a2ce7b9ea472c26ef367","modified":1552028920424},{"_id":"themes/hexo-snippet/source/js/love.js","hash":"5492ce36457a23ae3ed47597ff6b10aba63ace32","modified":1552034970638},{"_id":"themes/hexo-snippet/source/js/value_of_core.js","hash":"f96b9a870d1177ac57f31f7a88d88eb1a57c2c25","modified":1552036751488},{"_id":"themes/hexo-snippet/source/js/jquery.min.js","hash":"e3dbb65f2b541d842b50d37304b0102a2d5f2387","modified":1552035398560},{"_id":"source/_posts/tools/hexo_build_blog.md","hash":"c31e645c99eaf026d88fc2535f6c674cecfe6adf","modified":1552269764616},{"_id":"themes/hexo-snippet/source/img/article/tool/hexo.jpg","hash":"547ed3015842caec661ea05bd4bfa326b9df06ed","modified":1552267352916}],"Category":[{"name":"技术文章","_id":"cjszlvm6q000210efxv3sbte5"},{"name":"java","parent":"cjszlvm6q000210efxv3sbte5","_id":"cjszlvm6s000510ef7va17ohq"},{"name":"后端","parent":"cjszlvm6s000510ef7va17ohq","_id":"cjszlvm6s000610efszmltn5r"},{"name":"后端","_id":"cjszsnbbz0000g8efcx19xmm1"},{"name":"java","parent":"cjszsnbbz0000g8efcx19xmm1","_id":"cjszsnbc20003g8ef3crp5w23"},{"name":"tools","_id":"cjt3p3qog0001lnefuc7ttcdb"},{"name":"hexo","parent":"cjt3p3qog0001lnefuc7ttcdb","_id":"cjt3p3qoi0004lnefqertkkfe"}],"Data":[],"Page":[{"title":"tags","date":"2019-03-01T09:40:26.000Z","type":"tags","layout":"tags","_content":"\n\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-03-01 01:40:26\ntype: \"tags\"\nlayout: \"tags\"\n---\n\n\n","updated":"2019-03-01T09:42:30.234Z","path":"tags/index.html","comments":1,"_id":"cjszlvm5j000010ef967lczxc","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"一起学JDK源码 -- 开篇","excerpts":"从JDK源码知技术思想","date":"2019-03-08T08:00:00.000Z","img":"/img/learn_jdk.jpg","top":10000,"abbrlink":10472,"_content":"对于java开发人员来说，你学过java基础，知道什么是对象、类、方法、变量，你了解过java IO、多线程、网络编程,知道jsp、servlet、session、cookie,使用过spring、struts2、hibernate、mybatis。你做过很多项目，开发实现各种功能都很轻松，代码写起来一点也不费劲。但你自己心里清楚，你写的都是功能性的业务逻辑，稍微深入一点你就不知道了。你很明白自己其实没有什么水平，更称不上是大牛。 于是你为了让自己变成所为的大牛开始学习各种框架spring boot、spring cloud、netty、dubbo。渐渐的你会发现，学这些有什么用，你会的别人不会，但你告诉别人了，别人稍微学一下也就会了，你的竞争力在哪里，于是你又迷茫了。你很努力的在学习，但你又觉得很不踏实，技术的种类何其之多，今天学了这个，明天要用那个，然而一段时间不用之后你会全然忘记。有没有一种一劳永逸的方法呢，答案是有的，那就是要有扎实的java基础。什么才是扎实的java基础，答：玩好JDK。玩好JDK包括两部分：一是学好JVM、二是玩转java基础类库。技术只是手段，思想才是关键。通过查看JDK的源码，了解java的思想。了解了java的创造者是怎么想的，再来学习java相关的框架将会事半功倍，而且根深蒂固。接下来让我们一起走进JDK源码的世界，看看创造者们的思想。至于JVM，研究好了java基础类库再去研究。\n# 文章目的\n+ 了解创造者们的思想\n+ 知晓原理提升面试能力\n+ 提升自己的内功\n+ 为还在迷茫的我们提供一个方向\n\n# 目录\n[一起学JDK源码 -- Object类](https://www.jianshu.com/p/08c8890af5a0)\n[一起学JDK源码 -- Number类](https://www.jianshu.com/p/aebe99708d95)\n[一起学JDK源码 -- Byte类](https://www.jianshu.com/p/26bedb3ae3c4)\n[一起学JDK源码 -- Short类](https://www.jianshu.com/p/3826ccd9e867)\n[一起学JDK源码 -- Integer类](https://www.jianshu.com/p/e07d126ac1d0)\n[一起学JDK源码 -- Long类](https://www.jianshu.com/p/160c2bf8f781)\n[一起学JDK源码 -- Float类](https://www.jianshu.com/p/11d693340afc)\n[一起学JDK源码 -- Double类](https://www.jianshu.com/p/573457f624d2)\n[一起学JDK源码 -- Boolean类](https://www.jianshu.com/p/f1fd2fddda9a)\n[一起学JDK源码 -- String类](https://www.jianshu.com/p/b3e9deacd155)\n[一起学JDK源码 -- AbstractStringBuilder类](https://www.jianshu.com/p/77e82f324144)\n[一起学JDK源码 -- StringBuilder类](https://www.jianshu.com/p/9f5d1dd7d383)\n[一起学JDK源码 -- StringBuffer类](https://www.jianshu.com/p/6a713cad80a9)\n[一起学JDK源码 -- System类](https://www.jianshu.com/p/364eb51df927)\n上述是有关一起学JDK源码的目录，后期在更新文章中可能还会添加，每次添加都会修改本文章内容，并且每次发布新文章都会添加超链接到对应的章节。\n","source":"_posts/java/learn-jdk-start.md","raw":"---\ntitle: 一起学JDK源码 -- 开篇\nexcerpts: 从JDK源码知技术思想\n# 标签不分层级\ntags: [jdk源码,java]\n# 分类有层级\ncategories: [后端,java]\ndate: 2019-03-08\nimg: /img/learn_jdk.jpg\ntop: 10000\nabbrlink: 10472\n---\n对于java开发人员来说，你学过java基础，知道什么是对象、类、方法、变量，你了解过java IO、多线程、网络编程,知道jsp、servlet、session、cookie,使用过spring、struts2、hibernate、mybatis。你做过很多项目，开发实现各种功能都很轻松，代码写起来一点也不费劲。但你自己心里清楚，你写的都是功能性的业务逻辑，稍微深入一点你就不知道了。你很明白自己其实没有什么水平，更称不上是大牛。 于是你为了让自己变成所为的大牛开始学习各种框架spring boot、spring cloud、netty、dubbo。渐渐的你会发现，学这些有什么用，你会的别人不会，但你告诉别人了，别人稍微学一下也就会了，你的竞争力在哪里，于是你又迷茫了。你很努力的在学习，但你又觉得很不踏实，技术的种类何其之多，今天学了这个，明天要用那个，然而一段时间不用之后你会全然忘记。有没有一种一劳永逸的方法呢，答案是有的，那就是要有扎实的java基础。什么才是扎实的java基础，答：玩好JDK。玩好JDK包括两部分：一是学好JVM、二是玩转java基础类库。技术只是手段，思想才是关键。通过查看JDK的源码，了解java的思想。了解了java的创造者是怎么想的，再来学习java相关的框架将会事半功倍，而且根深蒂固。接下来让我们一起走进JDK源码的世界，看看创造者们的思想。至于JVM，研究好了java基础类库再去研究。\n# 文章目的\n+ 了解创造者们的思想\n+ 知晓原理提升面试能力\n+ 提升自己的内功\n+ 为还在迷茫的我们提供一个方向\n\n# 目录\n[一起学JDK源码 -- Object类](https://www.jianshu.com/p/08c8890af5a0)\n[一起学JDK源码 -- Number类](https://www.jianshu.com/p/aebe99708d95)\n[一起学JDK源码 -- Byte类](https://www.jianshu.com/p/26bedb3ae3c4)\n[一起学JDK源码 -- Short类](https://www.jianshu.com/p/3826ccd9e867)\n[一起学JDK源码 -- Integer类](https://www.jianshu.com/p/e07d126ac1d0)\n[一起学JDK源码 -- Long类](https://www.jianshu.com/p/160c2bf8f781)\n[一起学JDK源码 -- Float类](https://www.jianshu.com/p/11d693340afc)\n[一起学JDK源码 -- Double类](https://www.jianshu.com/p/573457f624d2)\n[一起学JDK源码 -- Boolean类](https://www.jianshu.com/p/f1fd2fddda9a)\n[一起学JDK源码 -- String类](https://www.jianshu.com/p/b3e9deacd155)\n[一起学JDK源码 -- AbstractStringBuilder类](https://www.jianshu.com/p/77e82f324144)\n[一起学JDK源码 -- StringBuilder类](https://www.jianshu.com/p/9f5d1dd7d383)\n[一起学JDK源码 -- StringBuffer类](https://www.jianshu.com/p/6a713cad80a9)\n[一起学JDK源码 -- System类](https://www.jianshu.com/p/364eb51df927)\n上述是有关一起学JDK源码的目录，后期在更新文章中可能还会添加，每次添加都会修改本文章内容，并且每次发布新文章都会添加超链接到对应的章节。\n","slug":"java/learn-jdk-start","published":1,"updated":"2019-03-11T03:12:52.705Z","_id":"cjszlvm6k000110ef4jv4oj6g","comments":1,"layout":"post","photos":[],"link":"","content":"<p>对于java开发人员来说，你学过java基础，知道什么是对象、类、方法、变量，你了解过java IO、多线程、网络编程,知道jsp、servlet、session、cookie,使用过spring、struts2、hibernate、mybatis。你做过很多项目，开发实现各种功能都很轻松，代码写起来一点也不费劲。但你自己心里清楚，你写的都是功能性的业务逻辑，稍微深入一点你就不知道了。你很明白自己其实没有什么水平，更称不上是大牛。 于是你为了让自己变成所为的大牛开始学习各种框架spring boot、spring cloud、netty、dubbo。渐渐的你会发现，学这些有什么用，你会的别人不会，但你告诉别人了，别人稍微学一下也就会了，你的竞争力在哪里，于是你又迷茫了。你很努力的在学习，但你又觉得很不踏实，技术的种类何其之多，今天学了这个，明天要用那个，然而一段时间不用之后你会全然忘记。有没有一种一劳永逸的方法呢，答案是有的，那就是要有扎实的java基础。什么才是扎实的java基础，答：玩好JDK。玩好JDK包括两部分：一是学好JVM、二是玩转java基础类库。技术只是手段，思想才是关键。通过查看JDK的源码，了解java的思想。了解了java的创造者是怎么想的，再来学习java相关的框架将会事半功倍，而且根深蒂固。接下来让我们一起走进JDK源码的世界，看看创造者们的思想。至于JVM，研究好了java基础类库再去研究。</p>\n<h1 id=\"文章目的\"><a href=\"#文章目的\" class=\"headerlink\" title=\"文章目的\"></a>文章目的</h1><ul>\n<li>了解创造者们的思想</li>\n<li>知晓原理提升面试能力</li>\n<li>提升自己的内功</li>\n<li>为还在迷茫的我们提供一个方向</li>\n</ul>\n<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><p><a href=\"https://www.jianshu.com/p/08c8890af5a0\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Object类</a><br><a href=\"https://www.jianshu.com/p/aebe99708d95\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Number类</a><br><a href=\"https://www.jianshu.com/p/26bedb3ae3c4\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Byte类</a><br><a href=\"https://www.jianshu.com/p/3826ccd9e867\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Short类</a><br><a href=\"https://www.jianshu.com/p/e07d126ac1d0\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Integer类</a><br><a href=\"https://www.jianshu.com/p/160c2bf8f781\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Long类</a><br><a href=\"https://www.jianshu.com/p/11d693340afc\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Float类</a><br><a href=\"https://www.jianshu.com/p/573457f624d2\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Double类</a><br><a href=\"https://www.jianshu.com/p/f1fd2fddda9a\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Boolean类</a><br><a href=\"https://www.jianshu.com/p/b3e9deacd155\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – String类</a><br><a href=\"https://www.jianshu.com/p/77e82f324144\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – AbstractStringBuilder类</a><br><a href=\"https://www.jianshu.com/p/9f5d1dd7d383\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – StringBuilder类</a><br><a href=\"https://www.jianshu.com/p/6a713cad80a9\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – StringBuffer类</a><br><a href=\"https://www.jianshu.com/p/364eb51df927\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – System类</a><br>上述是有关一起学JDK源码的目录，后期在更新文章中可能还会添加，每次添加都会修改本文章内容，并且每次发布新文章都会添加超链接到对应的章节。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>对于java开发人员来说，你学过java基础，知道什么是对象、类、方法、变量，你了解过java IO、多线程、网络编程,知道jsp、servlet、session、cookie,使用过spring、struts2、hibernate、mybatis。你做过很多项目，开发实现各种功能都很轻松，代码写起来一点也不费劲。但你自己心里清楚，你写的都是功能性的业务逻辑，稍微深入一点你就不知道了。你很明白自己其实没有什么水平，更称不上是大牛。 于是你为了让自己变成所为的大牛开始学习各种框架spring boot、spring cloud、netty、dubbo。渐渐的你会发现，学这些有什么用，你会的别人不会，但你告诉别人了，别人稍微学一下也就会了，你的竞争力在哪里，于是你又迷茫了。你很努力的在学习，但你又觉得很不踏实，技术的种类何其之多，今天学了这个，明天要用那个，然而一段时间不用之后你会全然忘记。有没有一种一劳永逸的方法呢，答案是有的，那就是要有扎实的java基础。什么才是扎实的java基础，答：玩好JDK。玩好JDK包括两部分：一是学好JVM、二是玩转java基础类库。技术只是手段，思想才是关键。通过查看JDK的源码，了解java的思想。了解了java的创造者是怎么想的，再来学习java相关的框架将会事半功倍，而且根深蒂固。接下来让我们一起走进JDK源码的世界，看看创造者们的思想。至于JVM，研究好了java基础类库再去研究。</p>\n<h1 id=\"文章目的\"><a href=\"#文章目的\" class=\"headerlink\" title=\"文章目的\"></a>文章目的</h1><ul>\n<li>了解创造者们的思想</li>\n<li>知晓原理提升面试能力</li>\n<li>提升自己的内功</li>\n<li>为还在迷茫的我们提供一个方向</li>\n</ul>\n<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><p><a href=\"https://www.jianshu.com/p/08c8890af5a0\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Object类</a><br><a href=\"https://www.jianshu.com/p/aebe99708d95\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Number类</a><br><a href=\"https://www.jianshu.com/p/26bedb3ae3c4\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Byte类</a><br><a href=\"https://www.jianshu.com/p/3826ccd9e867\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Short类</a><br><a href=\"https://www.jianshu.com/p/e07d126ac1d0\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Integer类</a><br><a href=\"https://www.jianshu.com/p/160c2bf8f781\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Long类</a><br><a href=\"https://www.jianshu.com/p/11d693340afc\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Float类</a><br><a href=\"https://www.jianshu.com/p/573457f624d2\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Double类</a><br><a href=\"https://www.jianshu.com/p/f1fd2fddda9a\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – Boolean类</a><br><a href=\"https://www.jianshu.com/p/b3e9deacd155\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – String类</a><br><a href=\"https://www.jianshu.com/p/77e82f324144\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – AbstractStringBuilder类</a><br><a href=\"https://www.jianshu.com/p/9f5d1dd7d383\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – StringBuilder类</a><br><a href=\"https://www.jianshu.com/p/6a713cad80a9\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – StringBuffer类</a><br><a href=\"https://www.jianshu.com/p/364eb51df927\" target=\"_blank\" rel=\"noopener\">一起学JDK源码 – System类</a><br>上述是有关一起学JDK源码的目录，后期在更新文章中可能还会添加，每次添加都会修改本文章内容，并且每次发布新文章都会添加超链接到对应的章节。</p>\n"},{"title":"hexo-github搭建个人博客","img":"/img/article/tool/hexo.jpg","top":3,"abbrlink":6332,"date":"2019-03-08T08:00:00.000Z","_content":"\n市面上已经有很多的博客网站了，像CSDN、博客园、简书等等，这些博客平台固然很好，在这些平台上可以直接写文章，发表，并且在各大搜索引擎上都能搜索到。但总感觉不自由，凸显不出来你的个性，俗话说金窝银窝不如自己的狗窝，本文就教大家搭建自己的博客窝。\n\n#### 本文特点：\n\n- 采用hexo静态博客框架，主题丰富\n- 学习成本低，快速搭建\n- 无须购买服务器，域名直接在github page平台上托管我们的博客\n- 自动部署，代码提交到github上后自动部署，无须手动\n- 好玩有趣的插件\n\n\n\n#### 操作系统\n\n理论上用什么操作系统都可以windows、mac、linux均可，本人采用linux，不过也不是买的linux服务器，本地使用VM搭建的linux，想搭建的可参考[VMware安装最新版CentOS7图文教程](https://blog.csdn.net/q2158798/article/details/80550626).\n\n#### 安装Node.js\n\n[下载Node.js](https://nodejs.org/zh-cn/download/)，根据不同的操作系统下载对应每户的Node.js，我下载的是linux64位的\n\n![](https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/node%E4%B8%8B%E8%BD%BD.png)\n\n下载完成后是.tar.xz为后缀的文件，可使用tar -Jxf xxx.tar.xz解压该文件\n\n 创建以下两个软连接，这样可以在任何目录下执行node和\n\nln -s  ~/node-v10.15.2-linux-x64/bin/node /usr/local/bin/\n\nln -s ~/node-v10.15.2-linux-x64/bin/npm /usr/local/bin/\n\n当然也可以linux系统中直接安装node.js，执行如下命令:\n\n```shell\nyum install node\n```\n\n安装完成后执行如下命令检查安装情况\n\n```shell\nnode -v\nnpm -v\n```\n\n\n\n#### <span id=\"env_3\">安装Git</span>\n\nwindows：到git官网上下载,[Download git](https://gitforwindows.org/),下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。\n\nlinux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码\n\n```shell\n yum install git\n```\n\n\n\n#### <span id=\"env_4\">安装Hexo</span>\n\n把node和git安装好后就可以安装hexo了，首先创建一个目录，该目录用于存入hexo相关的文件，以后你写的博客内容也存放于这个目录中，cd到这个目录中，执行如下命令\n\n```shell\n#安装hexo\nnpm install -g hexo-cli\n#检查hexo是否安装成功\nhexo -v\n```\n\n安装完成后，在该目录下执行如下命令来对hexo进行初始化\n\n```shell\nhexo init\n```\n\nhexo初始化完成后包含如下相关目录：\n\n_config.yml  db.json  node_modules  package.json  package-lock.json  scaffolds  source  themes\n\n其中_config.yml用于存入hexo相关配置，source中存放的是博客文章，以后写的文章都要存放到这个目录下，themes中存放的是主题\n\n启动hexo\n\n```shell\n#可使用-p port 指定启动端口，默认是4000端口\nhexo s &\n```\n\n访问hexo,打开浏览器输入http://127.0.0.1:4000就可以看到博客页面了，如果访问不到，请检查ip、端口、防火墙\n\n![](https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/hexo_init_page.png)\n\n这样个人博客就搭建完成了，是不是很简单。\n\n不过这才完成了一部分，如果你想要做成跟我一样的页面风格，或是选择其它风格就需要更换博客的主题。\n\n你可以到hexo的官网[寻找主题](https://hexo.io/themes/),找到自己想要的风格后，点击主题名称会跳转到对应的github，将其克隆到上面的themes目录下就可以了，克隆命令:\n\n```shell\ngit clone https://github.com/shenliyang/hexo-theme-snippet.git\n```\n\n然后打开_config.yml 文件，找到theme (hexo默认主题是theme: landscape)修改成你刚才克隆的主题名称，然后重新启动hexo就可以了。\n\n如果hexo官网的主题你都不喜欢，也可以github网站搜索hexo选择一些高star的主题，当然你了解了hexo后也可自行修改，打造自己的主题。\n\n#### 将hexo部署到github上\n\n1.在github上创建自己的仓库，仓库名称为you_github_name.github.io,仓库必须为public，如果你愿意花钱也可以设置成私有\n\n2.生成ssh-keygen添加到github\n\nssh-keygen用于提高代码的时候不用手动输入github用户名密码\n\n```shell\nssh-keygen -t rsa -C \"your_email\"\n```\n\n执行上术命令后会,在用户家目录下生成.ssh目录复制id_rsa.pub中的内容到github上\n\n登陆你的github,右上角找到settings，然后点击 SSH and GPG keys ,New SSH key\n\n![](https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/github_ssh_key.png)\n\n查看是否配置成功\n\n```shell\nssh -T git@github.com\n```\n\n配置成功后，你还需要配置:\n\n```shell\ngit config --global user.name \"your_github_name\"// 你的github用户名，非昵称\ngit config --global user.email  \"your_github_email\"// 填写你的github注册邮箱\n```\n\n\n\n2.安装deploy-git\n\n```shell\nnpm install hexo-deployer-git --save\n```\n\n3.修改_config.yml\n\n```yaml\ndeploy:\n  type: git\n  repo: https://github.com/you_github_name/you_github_name.github.io.git\n  branch: master\n```\n\n4.部署\n\n```shell\nhexo c\nhexo g\nhexo d\n```\n\n部署后会在目录中生成public目录，deployer-git会把该目录下的静态资源提交到你之前创建的github仓库中。\n\n5.设置GitHub Pages\n\ngithub pages的原理是，将你提交到仓库的静态资源，使用github提供的域名进行访问。\n\n进入你创建的your_github_name.github.io仓库，点击右边的settings,下拉到到GitHub Pages,选择master分支，保存，并随便选择一个主题。\n\n![](https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/git_hub_pages.png)\n\n设置完成后，会在GitHub Pages下面出现 Your site is published at https://xxx.github.io/\n\n这时候你就可以通过https://xxx.github.io/,访问你的博客了。\n\n6.hexo常用命令\n\n\n\n#### 博主主题安装与配置\n\n这里提供我自己博客主题安装与配置，如果你选择了其它的主题，配置也是类似的。\n\n下载主题:\n\n主题github：https://github.com/shenliyang/hexo-theme-snippet\n\n```shell\nthemes]# git clone https://github.com/shenliyang/hexo-theme-snippet.git snippet\n```\n\n修改配置：\n\n```yml\n主配置：\n# 网站title\ntitle: \n#网站作者\nauthor: aiceflower\n#网站语言,在主题的languages目录下可查看支持的语言类型\nlanguage: zh-CN\n#主题\ntheme: snippet\n\n主题配置:\n#一般的配置在snippet的README都能看到，这里主要说些常用的和容易忽略的配置。\n\n#修改网站图标\n#我用的是雪花图标，在https://www.iconfont.cn搜索自己喜欢的图标，下载并命名为favicon.ico ，替换掉\n#themes/snippet/source 目录下的favicon.ico\n\n#网站宣传语\nbranding: 你的宣传语\n#宣传语修改后，在网页审查元素仍能看到 \"从未如此简单有趣\"，虽然被隐藏了，但还是感觉不爽，找到snippet/layout/_partial目录下的header.ejs 文件删除里面的\"从未如此简单有趣\"就可以了\n\n# 各个小工具的设置\n\n#搜索 (需要安装插件:npm i hexo-generator-json-content@2.2.0 -S)\njsonContent:\n  searchLocal: true // 是否启用本地搜索\n  searchGoogle: false //是否启用谷歌搜索\n  posts:\n    title: true\n    text: true\n    content: true\n    categories: false\n    tags: false\n #网站公告，支持 html 和 纯文本\n notification: |-\n \t<p>公告</p>\n # 社交设置\n social:\n  - name: Github\n    icon: git\n    href: //github.com/aiceflower\n # 文章分类设置\ncate_config:\n   show_count: true #显示数字\n   show_current: true #高亮当前\n # 文章归档\n arch_config:\n   type: 'monthly'\n   format: 'YYYY年MM月'\n   show_count: true\n   order: -1\n # 标签云设置\n tagcloud:\n  tag3d: false // 是否启用3D标签云\n  textColour: '#444' // 字体颜色\n  outlineMethod: 'block' // 选中模式(outline|classic|block|colour|size|none)\n  outlineColour: '#FFDAB9' // 选中模式的颜色\n  interval: 30 // 动画帧之间的时间间隔，值越大，转动幅度越大\n  freezeActive: true // 选中的标签是否继续滚动\n  frontSelect: true // 不选标签云后部的标签\n  reverse: true // 是否反向触发\n  wheelZoom: false // 是否启用鼠标滚轮\n # 友链{@链接名称：链接地址{@links:[,,,]}}\nlinks:\n  - Hexo官网: https://hexo.io/zh-cn/\n #自定义小工具\n 1.widgets下增加一条 new_widgets\n 2.layout/_widget下增加一个new_widgets.ejs文件\n 注意名称对应\n \n #头部背景图片\n banner:\n \timg: /img/header.jpg\n # 文章摘要\n # 文章摘要{@摘要显示优先级：自定义摘要 > 自动截取摘要 }\n # 自定义摘要范围{@<!--more-->:截取more之前的内容为摘要}\n # 自动截取摘要{@excerptLength:自动截取文章前多少个字为摘要，不配置默认：120字}\nexcerptLength: 120\n\n#文章列表缩略图,在以下图片中随机选取\ndefaultImgs:\n  - http://www.example.jpg //远程图片链接示例\n  - /img/default-1.jpg //本地图片链接示例\n#文章目录(关闭后阅读文章时显示widgets，右边的小工具)\ntoc: true\n\n# 文章内声明{@declaration: {enable:是否开启,title:声明标题,tip:提示内容}}\ndeclaration:\n  enable: true\n  title: '转载声明'\n  tip: |-\n      商业转载请联系作者获得授权,非商业转载请注明出处 © <a href=\"\" target=\"_blank\">Snippet</a>\n      \n## 文章打赏{@reward: {alipay:支付宝打赏,wepay:微信打赏,tip:打赏提示语; 链接都为空,关闭打赏功能}}\nreward:\n  alipay: ''\n  wepay: ''\n  tip: Maybe you could buy me a cup of coffee. \n\n#评论\n# Valine评论 \nvaline:\n  enable: true\n  appId: \n  appKey:\n  placeholder: 说点什么吧\n  notify: false // 邮件通知\n  verify: false // 验证码\n  avatar: mm // avatar头像\n  meta: nick,mail // 输入框内容，可选值nick,mail,link\n  pageSize: 10\n1.到LeanCloud官网(https://leancloud.cn/)注册一个账号\n2.随便创建一个应用\n3.进入应用-->设置-->应用key(这里有appId和appKey)\n4.设置-->安全中心-->Web安全哉名中输入你的博客域名-->保存\n\n#文章Front-matter设置(是文件最上方以 --- 分隔的区域)\ntitle: \t\t标题\ndate: \t\t时间\ncategories: 分类 ['分类1','分类2'] \ntags: \t\t标签 ['标签1','标签2']    \ncomments: \t是否开启评论 true \nimg:        自定义缩略图\n```\n\n\n\n#### 自动部署\n\n本文使用Travis进行自动部署，对个人而言，就是让你的代码在提交到远程(这里是GitHub)，立即自动编译，自动化测试、自动部署等。不需要在担心更换电脑时，还要从新部署环境的问题，只要你能向远程推送文章，其他的事情就都可以交给Travis CI处理就ok了。\n\n1.[注册travis账号](https://www.travis-ci.org)关联你的github就可以了\n\n2.打开你需要自动部署的仓库(travis的settings会自动列出你github中所有的仓库，找到待部署的仓库，把右边的开关键拨到打开的状态。)\n\n3.为 Travis CI 配置登录权限，Travis部署时需要将代码提交到github上所以需要github授权\n\n首先去GitHub给账户添加一个Personal Access Token。打开GitHub，在 *Settings* 页面中找到 *Developer settings* ，打开 *Personal access tokens* 标签页，点击新建一个token。为这个Token取个名字，然后勾选 *repo* 这一栏，点击保存。如果不出意外，保存后屏幕上会显示一行字符串——这就是服务器为你生成的口令。\n\n4.我们在Travis CI中把口令设置为一个环境变量打开刚才Travis CI中blog仓库的设置页面，在环境变量一栏把 *access_token* 作为一个value填写进去，然后给它取个好听的名字，点击添加。\n\n5.拷贝文件:将主题目录下 gulpfile.js、travis.sh、.travis.yml拷贝到项目根目录下, Travis 要求项目的根目录下面，必须有一个.travis.yml文件。这是配置文件，指定了 Travis 的行为。该文件必须保存在 Github 仓库里面，一旦代码仓库有新的 Commit，Travis 就会去找这个文件，执行里面的命令。\n\n6.修改配置，修改.travis.yml\n\n```yaml\nbefore_script:\n  - git config user.name \"YOUR_NAME\"\n  - git config user.email \"YOUR_EMAIL\"\n  - sed -i'' \"s~https://github.com/<yourname>/<reponame>.git~https://${GITHUB_ACCESS_TOKEN}@github.com/<yourname>/<reopname>.git~\" _config.yml\nscript:\n  - hexo g\n  - hexo d\n```\n\nbefore_script 指的是在执行操作前要运行的命令。\n\n- 这里我们指定了 git 的一些配置\n- 然后使用sed命令将hexo的配置文件中的部署仓库的链接替换成了access_token形式，其中前面的那一串是你在`_config.yml`中的链接，后面的那一串是token形式的链接。 `${GITHUB_ACCESS_TOKEN}` 就是我们刚才为access_token配置的环境变量中的变量名。\n\n然后提交到github上就会自动部署了，可以去travis网站查看部署日志。\n\n7.自动部署时遇到的一些问题\n\n1)access_token变量设置出错\n\n```log\nThe previous command failed, possibly due to a malformed secure environment variable.\nPlease be sure to escape special characters such as ' ' and '$'.\nFor more information, see https://docs.travis-ci.com/user/encryption-keys.\n```\n\n解决: 取变量名称时不要使用横杠，单绰号，美元符号等特殊字符\n\n2)WARN  No layout: index.html\n\n解决: 这是Travis没有把主题从你的github仓库中下载下来，去主题目录下看，点不进去，这是github为了保护原作者，你在.travis.yml中写上克隆主题的命令，或是将对应主题中.git目录删除\n\n3)如果使用gulp报less不是当前所支持的版本\n\n解决: 将package.json文件中gulp的版本改为3.9.1，如果是4.0以上版本会报这个错\n\n4)部署后favicon.ico图标不显示\n\n解决：更换一下favicon.ico图标路径，放到img目录下, 引用 favicon: img/favicon.ico\n\n\n\n#### 插件安装\n\n页面点击出现爱心效果:\n\n主题目录下 source/js/里面 新建一个love.js,复制下面的代码进去\n\n```js\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n\n\n```\n\n然后打开主题目录下 layout/layout.ejs，文件末尾添加如下代码:\n\n```html\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/love.js\"></script>\n```\n\n\n\n点击出现文字效果:\n\n主题目录下 source/js/里面 新建一个text.js,复制下面的代码进去\n\n```javascript\n<script type=\"text/javascript\">\n/* 鼠标特效 */\nvar a_idx = 0;\njQuery(document).ready(function($) {\n    $(\"body\").click(function(e) {\n        var a = new Array(\"❤富强❤\",\"❤民主❤\",\"❤文明❤\",\"❤和谐❤\",\"❤自由❤\",\"❤平等❤\",\"❤公正❤\",\"❤法治❤\",\"❤爱国❤\",\"❤敬业❤\",\"❤诚信❤\",\"❤友善❤\");\n        var $i = $(\"<span></span>\").text(a[a_idx]);\n        a_idx = (a_idx + 1) % a.length;\n        var x = e.pageX,\n        y = e.pageY;\n        $i.css({\n            \"z-index\": 999999999999999999999999999999999999999999999999999999999999999999999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function() {\n            $i.remove();\n        });\n    });\n});\n</script>\n```\n\n然后打开主题目录下 layout/layout.ejs，文件末尾添加如下代码:\n\n以上代码用到了jquery，需要[下载jquery](https://raw.githubusercontent.com/aiceflower/assets/master/assets/js/jquery/jquery.min.js)，保存到source/js/目录下\n\n```html\n<script src=\"/js/jquery.min.js\"></script>\n<!-- 页面点击文字效果 -->\n<script type=\"text/javascript\" src=\"/js/src/text.js\"></script>\n```\n\n\n\n添加卡通人物：\n\n我在逛别人博客的时候偶然发现右下角居然有一个萌萌的卡通人物，还能根据你鼠标位置摇头，瞬间被吸引到了，赶紧也给自己博客添加一个吧。\n\n输入如下命令获取 live2d ：\n\n```npm\nnpm install --save hexo-helper-live2d  \n```\n\n输入以下命令，下载相应的模型，将 packagename 更换成模型名称即可，更多模型选择请[点击此处](https://github.com/xiazeyu/live2d-widget-models)，各个模型的预览请[访问原作者的博客](https://huaji8.top/post/live2d-plugin-2.0/)\n\n```npm\nnpm install packagename\n```\n\n打开主题目录下的 _config.yml 文件，添加如下代码：\n\n```yml\nlive2d:\n\tenable: true\n\tscriptFrom: local\n\tmodel: \n\t\tuse: live2d-widget-model-haruto #模型选择\n\tdisplay: \n\t\tposition: right  #模型位置\n\t\twidth: 150       #模型宽度\n\t\theight: 300      #模型高度\n\tmobile: \n\t\tshow: false      #是否在手机端显示\n\n```\n\n","source":"_posts/tools/hexo_build_blog.md","raw":"---\ntitle: hexo-github搭建个人博客\ntags:\n  - hexo\ncategories:\n  - tools\n  - hexo\nimg: /img/article/tool/hexo.jpg\ntop: 3\nabbrlink: 6332\ndate: 2019-03-08 00:00:00\n---\n\n市面上已经有很多的博客网站了，像CSDN、博客园、简书等等，这些博客平台固然很好，在这些平台上可以直接写文章，发表，并且在各大搜索引擎上都能搜索到。但总感觉不自由，凸显不出来你的个性，俗话说金窝银窝不如自己的狗窝，本文就教大家搭建自己的博客窝。\n\n#### 本文特点：\n\n- 采用hexo静态博客框架，主题丰富\n- 学习成本低，快速搭建\n- 无须购买服务器，域名直接在github page平台上托管我们的博客\n- 自动部署，代码提交到github上后自动部署，无须手动\n- 好玩有趣的插件\n\n\n\n#### 操作系统\n\n理论上用什么操作系统都可以windows、mac、linux均可，本人采用linux，不过也不是买的linux服务器，本地使用VM搭建的linux，想搭建的可参考[VMware安装最新版CentOS7图文教程](https://blog.csdn.net/q2158798/article/details/80550626).\n\n#### 安装Node.js\n\n[下载Node.js](https://nodejs.org/zh-cn/download/)，根据不同的操作系统下载对应每户的Node.js，我下载的是linux64位的\n\n![](https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/node%E4%B8%8B%E8%BD%BD.png)\n\n下载完成后是.tar.xz为后缀的文件，可使用tar -Jxf xxx.tar.xz解压该文件\n\n 创建以下两个软连接，这样可以在任何目录下执行node和\n\nln -s  ~/node-v10.15.2-linux-x64/bin/node /usr/local/bin/\n\nln -s ~/node-v10.15.2-linux-x64/bin/npm /usr/local/bin/\n\n当然也可以linux系统中直接安装node.js，执行如下命令:\n\n```shell\nyum install node\n```\n\n安装完成后执行如下命令检查安装情况\n\n```shell\nnode -v\nnpm -v\n```\n\n\n\n#### <span id=\"env_3\">安装Git</span>\n\nwindows：到git官网上下载,[Download git](https://gitforwindows.org/),下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。\n\nlinux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码\n\n```shell\n yum install git\n```\n\n\n\n#### <span id=\"env_4\">安装Hexo</span>\n\n把node和git安装好后就可以安装hexo了，首先创建一个目录，该目录用于存入hexo相关的文件，以后你写的博客内容也存放于这个目录中，cd到这个目录中，执行如下命令\n\n```shell\n#安装hexo\nnpm install -g hexo-cli\n#检查hexo是否安装成功\nhexo -v\n```\n\n安装完成后，在该目录下执行如下命令来对hexo进行初始化\n\n```shell\nhexo init\n```\n\nhexo初始化完成后包含如下相关目录：\n\n_config.yml  db.json  node_modules  package.json  package-lock.json  scaffolds  source  themes\n\n其中_config.yml用于存入hexo相关配置，source中存放的是博客文章，以后写的文章都要存放到这个目录下，themes中存放的是主题\n\n启动hexo\n\n```shell\n#可使用-p port 指定启动端口，默认是4000端口\nhexo s &\n```\n\n访问hexo,打开浏览器输入http://127.0.0.1:4000就可以看到博客页面了，如果访问不到，请检查ip、端口、防火墙\n\n![](https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/hexo_init_page.png)\n\n这样个人博客就搭建完成了，是不是很简单。\n\n不过这才完成了一部分，如果你想要做成跟我一样的页面风格，或是选择其它风格就需要更换博客的主题。\n\n你可以到hexo的官网[寻找主题](https://hexo.io/themes/),找到自己想要的风格后，点击主题名称会跳转到对应的github，将其克隆到上面的themes目录下就可以了，克隆命令:\n\n```shell\ngit clone https://github.com/shenliyang/hexo-theme-snippet.git\n```\n\n然后打开_config.yml 文件，找到theme (hexo默认主题是theme: landscape)修改成你刚才克隆的主题名称，然后重新启动hexo就可以了。\n\n如果hexo官网的主题你都不喜欢，也可以github网站搜索hexo选择一些高star的主题，当然你了解了hexo后也可自行修改，打造自己的主题。\n\n#### 将hexo部署到github上\n\n1.在github上创建自己的仓库，仓库名称为you_github_name.github.io,仓库必须为public，如果你愿意花钱也可以设置成私有\n\n2.生成ssh-keygen添加到github\n\nssh-keygen用于提高代码的时候不用手动输入github用户名密码\n\n```shell\nssh-keygen -t rsa -C \"your_email\"\n```\n\n执行上术命令后会,在用户家目录下生成.ssh目录复制id_rsa.pub中的内容到github上\n\n登陆你的github,右上角找到settings，然后点击 SSH and GPG keys ,New SSH key\n\n![](https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/github_ssh_key.png)\n\n查看是否配置成功\n\n```shell\nssh -T git@github.com\n```\n\n配置成功后，你还需要配置:\n\n```shell\ngit config --global user.name \"your_github_name\"// 你的github用户名，非昵称\ngit config --global user.email  \"your_github_email\"// 填写你的github注册邮箱\n```\n\n\n\n2.安装deploy-git\n\n```shell\nnpm install hexo-deployer-git --save\n```\n\n3.修改_config.yml\n\n```yaml\ndeploy:\n  type: git\n  repo: https://github.com/you_github_name/you_github_name.github.io.git\n  branch: master\n```\n\n4.部署\n\n```shell\nhexo c\nhexo g\nhexo d\n```\n\n部署后会在目录中生成public目录，deployer-git会把该目录下的静态资源提交到你之前创建的github仓库中。\n\n5.设置GitHub Pages\n\ngithub pages的原理是，将你提交到仓库的静态资源，使用github提供的域名进行访问。\n\n进入你创建的your_github_name.github.io仓库，点击右边的settings,下拉到到GitHub Pages,选择master分支，保存，并随便选择一个主题。\n\n![](https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/git_hub_pages.png)\n\n设置完成后，会在GitHub Pages下面出现 Your site is published at https://xxx.github.io/\n\n这时候你就可以通过https://xxx.github.io/,访问你的博客了。\n\n6.hexo常用命令\n\n\n\n#### 博主主题安装与配置\n\n这里提供我自己博客主题安装与配置，如果你选择了其它的主题，配置也是类似的。\n\n下载主题:\n\n主题github：https://github.com/shenliyang/hexo-theme-snippet\n\n```shell\nthemes]# git clone https://github.com/shenliyang/hexo-theme-snippet.git snippet\n```\n\n修改配置：\n\n```yml\n主配置：\n# 网站title\ntitle: \n#网站作者\nauthor: aiceflower\n#网站语言,在主题的languages目录下可查看支持的语言类型\nlanguage: zh-CN\n#主题\ntheme: snippet\n\n主题配置:\n#一般的配置在snippet的README都能看到，这里主要说些常用的和容易忽略的配置。\n\n#修改网站图标\n#我用的是雪花图标，在https://www.iconfont.cn搜索自己喜欢的图标，下载并命名为favicon.ico ，替换掉\n#themes/snippet/source 目录下的favicon.ico\n\n#网站宣传语\nbranding: 你的宣传语\n#宣传语修改后，在网页审查元素仍能看到 \"从未如此简单有趣\"，虽然被隐藏了，但还是感觉不爽，找到snippet/layout/_partial目录下的header.ejs 文件删除里面的\"从未如此简单有趣\"就可以了\n\n# 各个小工具的设置\n\n#搜索 (需要安装插件:npm i hexo-generator-json-content@2.2.0 -S)\njsonContent:\n  searchLocal: true // 是否启用本地搜索\n  searchGoogle: false //是否启用谷歌搜索\n  posts:\n    title: true\n    text: true\n    content: true\n    categories: false\n    tags: false\n #网站公告，支持 html 和 纯文本\n notification: |-\n \t<p>公告</p>\n # 社交设置\n social:\n  - name: Github\n    icon: git\n    href: //github.com/aiceflower\n # 文章分类设置\ncate_config:\n   show_count: true #显示数字\n   show_current: true #高亮当前\n # 文章归档\n arch_config:\n   type: 'monthly'\n   format: 'YYYY年MM月'\n   show_count: true\n   order: -1\n # 标签云设置\n tagcloud:\n  tag3d: false // 是否启用3D标签云\n  textColour: '#444' // 字体颜色\n  outlineMethod: 'block' // 选中模式(outline|classic|block|colour|size|none)\n  outlineColour: '#FFDAB9' // 选中模式的颜色\n  interval: 30 // 动画帧之间的时间间隔，值越大，转动幅度越大\n  freezeActive: true // 选中的标签是否继续滚动\n  frontSelect: true // 不选标签云后部的标签\n  reverse: true // 是否反向触发\n  wheelZoom: false // 是否启用鼠标滚轮\n # 友链{@链接名称：链接地址{@links:[,,,]}}\nlinks:\n  - Hexo官网: https://hexo.io/zh-cn/\n #自定义小工具\n 1.widgets下增加一条 new_widgets\n 2.layout/_widget下增加一个new_widgets.ejs文件\n 注意名称对应\n \n #头部背景图片\n banner:\n \timg: /img/header.jpg\n # 文章摘要\n # 文章摘要{@摘要显示优先级：自定义摘要 > 自动截取摘要 }\n # 自定义摘要范围{@<!--more-->:截取more之前的内容为摘要}\n # 自动截取摘要{@excerptLength:自动截取文章前多少个字为摘要，不配置默认：120字}\nexcerptLength: 120\n\n#文章列表缩略图,在以下图片中随机选取\ndefaultImgs:\n  - http://www.example.jpg //远程图片链接示例\n  - /img/default-1.jpg //本地图片链接示例\n#文章目录(关闭后阅读文章时显示widgets，右边的小工具)\ntoc: true\n\n# 文章内声明{@declaration: {enable:是否开启,title:声明标题,tip:提示内容}}\ndeclaration:\n  enable: true\n  title: '转载声明'\n  tip: |-\n      商业转载请联系作者获得授权,非商业转载请注明出处 © <a href=\"\" target=\"_blank\">Snippet</a>\n      \n## 文章打赏{@reward: {alipay:支付宝打赏,wepay:微信打赏,tip:打赏提示语; 链接都为空,关闭打赏功能}}\nreward:\n  alipay: ''\n  wepay: ''\n  tip: Maybe you could buy me a cup of coffee. \n\n#评论\n# Valine评论 \nvaline:\n  enable: true\n  appId: \n  appKey:\n  placeholder: 说点什么吧\n  notify: false // 邮件通知\n  verify: false // 验证码\n  avatar: mm // avatar头像\n  meta: nick,mail // 输入框内容，可选值nick,mail,link\n  pageSize: 10\n1.到LeanCloud官网(https://leancloud.cn/)注册一个账号\n2.随便创建一个应用\n3.进入应用-->设置-->应用key(这里有appId和appKey)\n4.设置-->安全中心-->Web安全哉名中输入你的博客域名-->保存\n\n#文章Front-matter设置(是文件最上方以 --- 分隔的区域)\ntitle: \t\t标题\ndate: \t\t时间\ncategories: 分类 ['分类1','分类2'] \ntags: \t\t标签 ['标签1','标签2']    \ncomments: \t是否开启评论 true \nimg:        自定义缩略图\n```\n\n\n\n#### 自动部署\n\n本文使用Travis进行自动部署，对个人而言，就是让你的代码在提交到远程(这里是GitHub)，立即自动编译，自动化测试、自动部署等。不需要在担心更换电脑时，还要从新部署环境的问题，只要你能向远程推送文章，其他的事情就都可以交给Travis CI处理就ok了。\n\n1.[注册travis账号](https://www.travis-ci.org)关联你的github就可以了\n\n2.打开你需要自动部署的仓库(travis的settings会自动列出你github中所有的仓库，找到待部署的仓库，把右边的开关键拨到打开的状态。)\n\n3.为 Travis CI 配置登录权限，Travis部署时需要将代码提交到github上所以需要github授权\n\n首先去GitHub给账户添加一个Personal Access Token。打开GitHub，在 *Settings* 页面中找到 *Developer settings* ，打开 *Personal access tokens* 标签页，点击新建一个token。为这个Token取个名字，然后勾选 *repo* 这一栏，点击保存。如果不出意外，保存后屏幕上会显示一行字符串——这就是服务器为你生成的口令。\n\n4.我们在Travis CI中把口令设置为一个环境变量打开刚才Travis CI中blog仓库的设置页面，在环境变量一栏把 *access_token* 作为一个value填写进去，然后给它取个好听的名字，点击添加。\n\n5.拷贝文件:将主题目录下 gulpfile.js、travis.sh、.travis.yml拷贝到项目根目录下, Travis 要求项目的根目录下面，必须有一个.travis.yml文件。这是配置文件，指定了 Travis 的行为。该文件必须保存在 Github 仓库里面，一旦代码仓库有新的 Commit，Travis 就会去找这个文件，执行里面的命令。\n\n6.修改配置，修改.travis.yml\n\n```yaml\nbefore_script:\n  - git config user.name \"YOUR_NAME\"\n  - git config user.email \"YOUR_EMAIL\"\n  - sed -i'' \"s~https://github.com/<yourname>/<reponame>.git~https://${GITHUB_ACCESS_TOKEN}@github.com/<yourname>/<reopname>.git~\" _config.yml\nscript:\n  - hexo g\n  - hexo d\n```\n\nbefore_script 指的是在执行操作前要运行的命令。\n\n- 这里我们指定了 git 的一些配置\n- 然后使用sed命令将hexo的配置文件中的部署仓库的链接替换成了access_token形式，其中前面的那一串是你在`_config.yml`中的链接，后面的那一串是token形式的链接。 `${GITHUB_ACCESS_TOKEN}` 就是我们刚才为access_token配置的环境变量中的变量名。\n\n然后提交到github上就会自动部署了，可以去travis网站查看部署日志。\n\n7.自动部署时遇到的一些问题\n\n1)access_token变量设置出错\n\n```log\nThe previous command failed, possibly due to a malformed secure environment variable.\nPlease be sure to escape special characters such as ' ' and '$'.\nFor more information, see https://docs.travis-ci.com/user/encryption-keys.\n```\n\n解决: 取变量名称时不要使用横杠，单绰号，美元符号等特殊字符\n\n2)WARN  No layout: index.html\n\n解决: 这是Travis没有把主题从你的github仓库中下载下来，去主题目录下看，点不进去，这是github为了保护原作者，你在.travis.yml中写上克隆主题的命令，或是将对应主题中.git目录删除\n\n3)如果使用gulp报less不是当前所支持的版本\n\n解决: 将package.json文件中gulp的版本改为3.9.1，如果是4.0以上版本会报这个错\n\n4)部署后favicon.ico图标不显示\n\n解决：更换一下favicon.ico图标路径，放到img目录下, 引用 favicon: img/favicon.ico\n\n\n\n#### 插件安装\n\n页面点击出现爱心效果:\n\n主题目录下 source/js/里面 新建一个love.js,复制下面的代码进去\n\n```js\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n\n\n```\n\n然后打开主题目录下 layout/layout.ejs，文件末尾添加如下代码:\n\n```html\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/love.js\"></script>\n```\n\n\n\n点击出现文字效果:\n\n主题目录下 source/js/里面 新建一个text.js,复制下面的代码进去\n\n```javascript\n<script type=\"text/javascript\">\n/* 鼠标特效 */\nvar a_idx = 0;\njQuery(document).ready(function($) {\n    $(\"body\").click(function(e) {\n        var a = new Array(\"❤富强❤\",\"❤民主❤\",\"❤文明❤\",\"❤和谐❤\",\"❤自由❤\",\"❤平等❤\",\"❤公正❤\",\"❤法治❤\",\"❤爱国❤\",\"❤敬业❤\",\"❤诚信❤\",\"❤友善❤\");\n        var $i = $(\"<span></span>\").text(a[a_idx]);\n        a_idx = (a_idx + 1) % a.length;\n        var x = e.pageX,\n        y = e.pageY;\n        $i.css({\n            \"z-index\": 999999999999999999999999999999999999999999999999999999999999999999999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function() {\n            $i.remove();\n        });\n    });\n});\n</script>\n```\n\n然后打开主题目录下 layout/layout.ejs，文件末尾添加如下代码:\n\n以上代码用到了jquery，需要[下载jquery](https://raw.githubusercontent.com/aiceflower/assets/master/assets/js/jquery/jquery.min.js)，保存到source/js/目录下\n\n```html\n<script src=\"/js/jquery.min.js\"></script>\n<!-- 页面点击文字效果 -->\n<script type=\"text/javascript\" src=\"/js/src/text.js\"></script>\n```\n\n\n\n添加卡通人物：\n\n我在逛别人博客的时候偶然发现右下角居然有一个萌萌的卡通人物，还能根据你鼠标位置摇头，瞬间被吸引到了，赶紧也给自己博客添加一个吧。\n\n输入如下命令获取 live2d ：\n\n```npm\nnpm install --save hexo-helper-live2d  \n```\n\n输入以下命令，下载相应的模型，将 packagename 更换成模型名称即可，更多模型选择请[点击此处](https://github.com/xiazeyu/live2d-widget-models)，各个模型的预览请[访问原作者的博客](https://huaji8.top/post/live2d-plugin-2.0/)\n\n```npm\nnpm install packagename\n```\n\n打开主题目录下的 _config.yml 文件，添加如下代码：\n\n```yml\nlive2d:\n\tenable: true\n\tscriptFrom: local\n\tmodel: \n\t\tuse: live2d-widget-model-haruto #模型选择\n\tdisplay: \n\t\tposition: right  #模型位置\n\t\twidth: 150       #模型宽度\n\t\theight: 300      #模型高度\n\tmobile: \n\t\tshow: false      #是否在手机端显示\n\n```\n\n","slug":"tools/hexo_build_blog","published":1,"updated":"2019-03-11T02:02:44.616Z","_id":"cjt3p3qoc0000lnef700zxqi6","comments":1,"layout":"post","photos":[],"link":"","content":"<p>市面上已经有很多的博客网站了，像CSDN、博客园、简书等等，这些博客平台固然很好，在这些平台上可以直接写文章，发表，并且在各大搜索引擎上都能搜索到。但总感觉不自由，凸显不出来你的个性，俗话说金窝银窝不如自己的狗窝，本文就教大家搭建自己的博客窝。</p>\n<h4 id=\"本文特点：\"><a href=\"#本文特点：\" class=\"headerlink\" title=\"本文特点：\"></a>本文特点：</h4><ul>\n<li>采用hexo静态博客框架，主题丰富</li>\n<li>学习成本低，快速搭建</li>\n<li>无须购买服务器，域名直接在github page平台上托管我们的博客</li>\n<li>自动部署，代码提交到github上后自动部署，无须手动</li>\n<li>好玩有趣的插件</li>\n</ul>\n<h4 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h4><p>理论上用什么操作系统都可以windows、mac、linux均可，本人采用linux，不过也不是买的linux服务器，本地使用VM搭建的linux，想搭建的可参考<a href=\"https://blog.csdn.net/q2158798/article/details/80550626\" target=\"_blank\" rel=\"noopener\">VMware安装最新版CentOS7图文教程</a>.</p>\n<h4 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h4><p><a href=\"https://nodejs.org/zh-cn/download/\" target=\"_blank\" rel=\"noopener\">下载Node.js</a>，根据不同的操作系统下载对应每户的Node.js，我下载的是linux64位的</p>\n<p><img src=\"https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/node%E4%B8%8B%E8%BD%BD.png\" alt></p>\n<p>下载完成后是.tar.xz为后缀的文件，可使用tar -Jxf xxx.tar.xz解压该文件</p>\n<p> 创建以下两个软连接，这样可以在任何目录下执行node和</p>\n<p>ln -s  ~/node-v10.15.2-linux-x64/bin/node /usr/local/bin/</p>\n<p>ln -s ~/node-v10.15.2-linux-x64/bin/npm /usr/local/bin/</p>\n<p>当然也可以linux系统中直接安装node.js，执行如下命令:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install node</span><br></pre></td></tr></table></figure>\n<p>安装完成后执行如下命令检查安装情况</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a><span id=\"env_3\">安装Git</span></h4><p>windows：到git官网上下载,<a href=\"https://gitforwindows.org/\" target=\"_blank\" rel=\"noopener\">Download git</a>,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。</p>\n<p>linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install git</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a><span id=\"env_4\">安装Hexo</span></h4><p>把node和git安装好后就可以安装hexo了，首先创建一个目录，该目录用于存入hexo相关的文件，以后你写的博客内容也存放于这个目录中，cd到这个目录中，执行如下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>安装hexo</span><br><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\"><span class=\"meta\">#</span>检查hexo是否安装成功</span><br><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure>\n<p>安装完成后，在该目录下执行如下命令来对hexo进行初始化</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>hexo初始化完成后包含如下相关目录：</p>\n<p>_config.yml  db.json  node_modules  package.json  package-lock.json  scaffolds  source  themes</p>\n<p>其中_config.yml用于存入hexo相关配置，source中存放的是博客文章，以后写的文章都要存放到这个目录下，themes中存放的是主题</p>\n<p>启动hexo</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>可使用-p port 指定启动端口，默认是4000端口</span><br><span class=\"line\">hexo s &amp;</span><br></pre></td></tr></table></figure>\n<p>访问hexo,打开浏览器输入<a href=\"http://127.0.0.1:4000就可以看到博客页面了，如果访问不到，请检查ip、端口、防火墙\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:4000就可以看到博客页面了，如果访问不到，请检查ip、端口、防火墙</a></p>\n<p><img src=\"https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/hexo_init_page.png\" alt></p>\n<p>这样个人博客就搭建完成了，是不是很简单。</p>\n<p>不过这才完成了一部分，如果你想要做成跟我一样的页面风格，或是选择其它风格就需要更换博客的主题。</p>\n<p>你可以到hexo的官网<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">寻找主题</a>,找到自己想要的风格后，点击主题名称会跳转到对应的github，将其克隆到上面的themes目录下就可以了，克隆命令:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/shenliyang/hexo-theme-snippet.git</span><br></pre></td></tr></table></figure>\n<p>然后打开_config.yml 文件，找到theme (hexo默认主题是theme: landscape)修改成你刚才克隆的主题名称，然后重新启动hexo就可以了。</p>\n<p>如果hexo官网的主题你都不喜欢，也可以github网站搜索hexo选择一些高star的主题，当然你了解了hexo后也可自行修改，打造自己的主题。</p>\n<h4 id=\"将hexo部署到github上\"><a href=\"#将hexo部署到github上\" class=\"headerlink\" title=\"将hexo部署到github上\"></a>将hexo部署到github上</h4><p>1.在github上创建自己的仓库，仓库名称为you_github_name.github.io,仓库必须为public，如果你愿意花钱也可以设置成私有</p>\n<p>2.生成ssh-keygen添加到github</p>\n<p>ssh-keygen用于提高代码的时候不用手动输入github用户名密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C \"your_email\"</span><br></pre></td></tr></table></figure>\n<p>执行上术命令后会,在用户家目录下生成.ssh目录复制id_rsa.pub中的内容到github上</p>\n<p>登陆你的github,右上角找到settings，然后点击 SSH and GPG keys ,New SSH key</p>\n<p><img src=\"https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/github_ssh_key.png\" alt></p>\n<p>查看是否配置成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>配置成功后，你还需要配置:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name \"your_github_name\"// 你的github用户名，非昵称</span><br><span class=\"line\">git config --global user.email  \"your_github_email\"// 填写你的github注册邮箱</span><br></pre></td></tr></table></figure>\n<p>2.安装deploy-git</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>3.修改_config.yml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"attr\">https://github.com/you_github_name/you_github_name.github.io.git</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n<p>4.部署</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo c</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>部署后会在目录中生成public目录，deployer-git会把该目录下的静态资源提交到你之前创建的github仓库中。</p>\n<p>5.设置GitHub Pages</p>\n<p>github pages的原理是，将你提交到仓库的静态资源，使用github提供的域名进行访问。</p>\n<p>进入你创建的your_github_name.github.io仓库，点击右边的settings,下拉到到GitHub Pages,选择master分支，保存，并随便选择一个主题。</p>\n<p><img src=\"https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/git_hub_pages.png\" alt></p>\n<p>设置完成后，会在GitHub Pages下面出现 Your site is published at <a href=\"https://xxx.github.io/\" target=\"_blank\" rel=\"noopener\">https://xxx.github.io/</a></p>\n<p>这时候你就可以通过<a href=\"https://xxx.github.io/,访问你的博客了。\" target=\"_blank\" rel=\"noopener\">https://xxx.github.io/,访问你的博客了。</a></p>\n<p>6.hexo常用命令</p>\n<h4 id=\"博主主题安装与配置\"><a href=\"#博主主题安装与配置\" class=\"headerlink\" title=\"博主主题安装与配置\"></a>博主主题安装与配置</h4><p>这里提供我自己博客主题安装与配置，如果你选择了其它的主题，配置也是类似的。</p>\n<p>下载主题:</p>\n<p>主题github：<a href=\"https://github.com/shenliyang/hexo-theme-snippet\">https://github.com/shenliyang/hexo-theme-snippet</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">themes]#</span> git clone https://github.com/shenliyang/hexo-theme-snippet.git snippet</span><br></pre></td></tr></table></figure>\n<p>修改配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">主配置：</span></span><br><span class=\"line\"><span class=\"comment\"># 网站title</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> </span><br><span class=\"line\"><span class=\"comment\">#网站作者</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"string\">aiceflower</span></span><br><span class=\"line\"><span class=\"comment\">#网站语言,在主题的languages目录下可查看支持的语言类型</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-CN</span></span><br><span class=\"line\"><span class=\"comment\">#主题</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">snippet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">主题配置:</span></span><br><span class=\"line\"><span class=\"comment\">#一般的配置在snippet的README都能看到，这里主要说些常用的和容易忽略的配置。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#修改网站图标</span></span><br><span class=\"line\"><span class=\"comment\">#我用的是雪花图标，在https://www.iconfont.cn搜索自己喜欢的图标，下载并命名为favicon.ico ，替换掉</span></span><br><span class=\"line\"><span class=\"comment\">#themes/snippet/source 目录下的favicon.ico</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#网站宣传语</span></span><br><span class=\"line\"><span class=\"attr\">branding:</span> <span class=\"string\">你的宣传语</span></span><br><span class=\"line\"><span class=\"comment\">#宣传语修改后，在网页审查元素仍能看到 \"从未如此简单有趣\"，虽然被隐藏了，但还是感觉不爽，找到snippet/layout/_partial目录下的header.ejs 文件删除里面的\"从未如此简单有趣\"就可以了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 各个小工具的设置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#搜索 (需要安装插件:npm i hexo-generator-json-content@2.2.0 -S)</span></span><br><span class=\"line\"><span class=\"attr\">jsonContent:</span></span><br><span class=\"line\"><span class=\"attr\">  searchLocal:</span> <span class=\"literal\">true</span> <span class=\"string\">//</span> <span class=\"string\">是否启用本地搜索</span></span><br><span class=\"line\"><span class=\"attr\">  searchGoogle:</span> <span class=\"literal\">false</span> <span class=\"string\">//是否启用谷歌搜索</span></span><br><span class=\"line\"><span class=\"attr\">  posts:</span></span><br><span class=\"line\"><span class=\"attr\">    title:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    text:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    content:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    categories:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">    tags:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"> <span class=\"comment\">#网站公告，支持 html 和 纯文本</span></span><br><span class=\"line\"><span class=\"attr\"> notification:</span> <span class=\"string\">|-</span></span><br><span class=\"line\"> \t<span class=\"string\">&lt;p&gt;公告&lt;/p&gt;</span></span><br><span class=\"line\"> <span class=\"comment\"># 社交设置</span></span><br><span class=\"line\"><span class=\"attr\"> social:</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">Github</span></span><br><span class=\"line\"><span class=\"attr\">    icon:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">    href:</span> <span class=\"string\">//github.com/aiceflower</span></span><br><span class=\"line\"> <span class=\"comment\"># 文章分类设置</span></span><br><span class=\"line\"><span class=\"attr\">cate_config:</span></span><br><span class=\"line\"><span class=\"attr\">   show_count:</span> <span class=\"literal\">true</span> <span class=\"comment\">#显示数字</span></span><br><span class=\"line\"><span class=\"attr\">   show_current:</span> <span class=\"literal\">true</span> <span class=\"comment\">#高亮当前</span></span><br><span class=\"line\"> <span class=\"comment\"># 文章归档</span></span><br><span class=\"line\"><span class=\"attr\"> arch_config:</span></span><br><span class=\"line\"><span class=\"attr\">   type:</span> <span class=\"string\">'monthly'</span></span><br><span class=\"line\"><span class=\"attr\">   format:</span> <span class=\"string\">'YYYY年MM月'</span></span><br><span class=\"line\"><span class=\"attr\">   show_count:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">   order:</span> <span class=\"bullet\">-1</span></span><br><span class=\"line\"> <span class=\"comment\"># 标签云设置</span></span><br><span class=\"line\"><span class=\"attr\"> tagcloud:</span></span><br><span class=\"line\"><span class=\"attr\">  tag3d:</span> <span class=\"literal\">false</span> <span class=\"string\">//</span> <span class=\"string\">是否启用3D标签云</span></span><br><span class=\"line\"><span class=\"attr\">  textColour:</span> <span class=\"string\">'#444'</span> <span class=\"string\">//</span> <span class=\"string\">字体颜色</span></span><br><span class=\"line\"><span class=\"attr\">  outlineMethod:</span> <span class=\"string\">'block'</span> <span class=\"string\">//</span> <span class=\"string\">选中模式(outline|classic|block|colour|size|none)</span></span><br><span class=\"line\"><span class=\"attr\">  outlineColour:</span> <span class=\"string\">'#FFDAB9'</span> <span class=\"string\">//</span> <span class=\"string\">选中模式的颜色</span></span><br><span class=\"line\"><span class=\"attr\">  interval:</span> <span class=\"number\">30</span> <span class=\"string\">//</span> <span class=\"string\">动画帧之间的时间间隔，值越大，转动幅度越大</span></span><br><span class=\"line\"><span class=\"attr\">  freezeActive:</span> <span class=\"literal\">true</span> <span class=\"string\">//</span> <span class=\"string\">选中的标签是否继续滚动</span></span><br><span class=\"line\"><span class=\"attr\">  frontSelect:</span> <span class=\"literal\">true</span> <span class=\"string\">//</span> <span class=\"string\">不选标签云后部的标签</span></span><br><span class=\"line\"><span class=\"attr\">  reverse:</span> <span class=\"literal\">true</span> <span class=\"string\">//</span> <span class=\"string\">是否反向触发</span></span><br><span class=\"line\"><span class=\"attr\">  wheelZoom:</span> <span class=\"literal\">false</span> <span class=\"string\">//</span> <span class=\"string\">是否启用鼠标滚轮</span></span><br><span class=\"line\"> <span class=\"comment\"># 友链&#123;@链接名称：链接地址&#123;@links:[,,,]&#125;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">links:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">Hexo官网:</span> <span class=\"attr\">https://hexo.io/zh-cn/</span></span><br><span class=\"line\"> <span class=\"comment\">#自定义小工具</span></span><br><span class=\"line\"> <span class=\"number\">1.</span><span class=\"string\">widgets下增加一条</span> <span class=\"string\">new_widgets</span></span><br><span class=\"line\"> <span class=\"number\">2.</span><span class=\"string\">layout/_widget下增加一个new_widgets.ejs文件</span></span><br><span class=\"line\"> <span class=\"string\">注意名称对应</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">#头部背景图片</span></span><br><span class=\"line\"><span class=\"attr\"> banner:</span></span><br><span class=\"line\"> \t<span class=\"attr\">img:</span> <span class=\"string\">/img/header.jpg</span></span><br><span class=\"line\"> <span class=\"comment\"># 文章摘要</span></span><br><span class=\"line\"> <span class=\"comment\"># 文章摘要&#123;@摘要显示优先级：自定义摘要 &gt; 自动截取摘要 &#125;</span></span><br><span class=\"line\"> <span class=\"comment\"># 自定义摘要范围&#123;@&lt;!--more--&gt;:截取more之前的内容为摘要&#125;</span></span><br><span class=\"line\"> <span class=\"comment\"># 自动截取摘要&#123;@excerptLength:自动截取文章前多少个字为摘要，不配置默认：120字&#125;</span></span><br><span class=\"line\"><span class=\"attr\">excerptLength:</span> <span class=\"number\">120</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#文章列表缩略图,在以下图片中随机选取</span></span><br><span class=\"line\"><span class=\"attr\">defaultImgs:</span></span><br><span class=\"line\"><span class=\"attr\">  - http:</span><span class=\"string\">//www.example.jpg</span> <span class=\"string\">//远程图片链接示例</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">/img/default-1.jpg</span> <span class=\"string\">//本地图片链接示例</span></span><br><span class=\"line\"><span class=\"comment\">#文章目录(关闭后阅读文章时显示widgets，右边的小工具)</span></span><br><span class=\"line\"><span class=\"attr\">toc:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文章内声明&#123;@declaration: &#123;enable:是否开启,title:声明标题,tip:提示内容&#125;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">declaration:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  title:</span> <span class=\"string\">'转载声明'</span></span><br><span class=\"line\"><span class=\"attr\">  tip:</span> <span class=\"string\">|-</span></span><br><span class=\"line\">      <span class=\"string\">商业转载请联系作者获得授权,非商业转载请注明出处</span> <span class=\"string\">©</span> <span class=\"string\">&lt;a</span> <span class=\"string\">href=\"\"</span> <span class=\"string\">target=\"_blank\"&gt;Snippet&lt;/a&gt;</span></span><br><span class=\"line\">      </span><br><span class=\"line\"><span class=\"comment\">## 文章打赏&#123;@reward: &#123;alipay:支付宝打赏,wepay:微信打赏,tip:打赏提示语; 链接都为空,关闭打赏功能&#125;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">reward:</span></span><br><span class=\"line\"><span class=\"attr\">  alipay:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">  wepay:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">  tip:</span> <span class=\"string\">Maybe</span> <span class=\"string\">you</span> <span class=\"string\">could</span> <span class=\"string\">buy</span> <span class=\"string\">me</span> <span class=\"string\">a</span> <span class=\"string\">cup</span> <span class=\"string\">of</span> <span class=\"string\">coffee.</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#评论</span></span><br><span class=\"line\"><span class=\"comment\"># Valine评论 </span></span><br><span class=\"line\"><span class=\"attr\">valine:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  appId:</span> </span><br><span class=\"line\"><span class=\"attr\">  appKey:</span></span><br><span class=\"line\"><span class=\"attr\">  placeholder:</span> <span class=\"string\">说点什么吧</span></span><br><span class=\"line\"><span class=\"attr\">  notify:</span> <span class=\"literal\">false</span> <span class=\"string\">//</span> <span class=\"string\">邮件通知</span></span><br><span class=\"line\"><span class=\"attr\">  verify:</span> <span class=\"literal\">false</span> <span class=\"string\">//</span> <span class=\"string\">验证码</span></span><br><span class=\"line\"><span class=\"attr\">  avatar:</span> <span class=\"string\">mm</span> <span class=\"string\">//</span> <span class=\"string\">avatar头像</span></span><br><span class=\"line\"><span class=\"attr\">  meta:</span> <span class=\"string\">nick,mail</span> <span class=\"string\">//</span> <span class=\"string\">输入框内容，可选值nick,mail,link</span></span><br><span class=\"line\"><span class=\"attr\">  pageSize:</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"number\">1.</span><span class=\"string\">到LeanCloud官网(https://leancloud.cn/)注册一个账号</span></span><br><span class=\"line\"><span class=\"number\">2.</span><span class=\"string\">随便创建一个应用</span></span><br><span class=\"line\"><span class=\"number\">3.</span><span class=\"string\">进入应用--&gt;设置--&gt;应用key(这里有appId和appKey)</span></span><br><span class=\"line\"><span class=\"number\">4.</span><span class=\"string\">设置--&gt;安全中心--&gt;Web安全哉名中输入你的博客域名--&gt;保存</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#文章Front-matter设置(是文件最上方以 --- 分隔的区域)</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> \t\t<span class=\"string\">标题</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> \t\t<span class=\"string\">时间</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span> <span class=\"string\">分类</span> <span class=\"string\">['分类1','分类2']</span> </span><br><span class=\"line\"><span class=\"attr\">tags:</span> \t\t<span class=\"string\">标签</span> <span class=\"string\">['标签1','标签2']</span>    </span><br><span class=\"line\"><span class=\"attr\">comments:</span> \t<span class=\"string\">是否开启评论</span> <span class=\"literal\">true</span> </span><br><span class=\"line\"><span class=\"attr\">img:</span>        <span class=\"string\">自定义缩略图</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"自动部署\"><a href=\"#自动部署\" class=\"headerlink\" title=\"自动部署\"></a>自动部署</h4><p>本文使用Travis进行自动部署，对个人而言，就是让你的代码在提交到远程(这里是GitHub)，立即自动编译，自动化测试、自动部署等。不需要在担心更换电脑时，还要从新部署环境的问题，只要你能向远程推送文章，其他的事情就都可以交给Travis CI处理就ok了。</p>\n<p>1.<a href=\"https://www.travis-ci.org\" target=\"_blank\" rel=\"noopener\">注册travis账号</a>关联你的github就可以了</p>\n<p>2.打开你需要自动部署的仓库(travis的settings会自动列出你github中所有的仓库，找到待部署的仓库，把右边的开关键拨到打开的状态。)</p>\n<p>3.为 Travis CI 配置登录权限，Travis部署时需要将代码提交到github上所以需要github授权</p>\n<p>首先去GitHub给账户添加一个Personal Access Token。打开GitHub，在 <em>Settings</em> 页面中找到 <em>Developer settings</em> ，打开 <em>Personal access tokens</em> 标签页，点击新建一个token。为这个Token取个名字，然后勾选 <em>repo</em> 这一栏，点击保存。如果不出意外，保存后屏幕上会显示一行字符串——这就是服务器为你生成的口令。</p>\n<p>4.我们在Travis CI中把口令设置为一个环境变量打开刚才Travis CI中blog仓库的设置页面，在环境变量一栏把 <em>access_token</em> 作为一个value填写进去，然后给它取个好听的名字，点击添加。</p>\n<p>5.拷贝文件:将主题目录下 gulpfile.js、travis.sh、.travis.yml拷贝到项目根目录下, Travis 要求项目的根目录下面，必须有一个.travis.yml文件。这是配置文件，指定了 Travis 的行为。该文件必须保存在 Github 仓库里面，一旦代码仓库有新的 Commit，Travis 就会去找这个文件，执行里面的命令。</p>\n<p>6.修改配置，修改.travis.yml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">before_script:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">user.name</span> <span class=\"string\">\"YOUR_NAME\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">user.email</span> <span class=\"string\">\"YOUR_EMAIL\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">sed</span> <span class=\"bullet\">-i''</span> <span class=\"string\">\"s~https://github.com/&lt;yourname&gt;/&lt;reponame&gt;.git~https://$&#123;GITHUB_ACCESS_TOKEN&#125;@github.com/&lt;yourname&gt;/&lt;reopname&gt;.git~\"</span> <span class=\"string\">_config.yml</span></span><br><span class=\"line\"><span class=\"attr\">script:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">hexo</span> <span class=\"string\">g</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">hexo</span> <span class=\"string\">d</span></span><br></pre></td></tr></table></figure>\n<p>before_script 指的是在执行操作前要运行的命令。</p>\n<ul>\n<li>这里我们指定了 git 的一些配置</li>\n<li>然后使用sed命令将hexo的配置文件中的部署仓库的链接替换成了access_token形式，其中前面的那一串是你在<code>_config.yml</code>中的链接，后面的那一串是token形式的链接。 <code>${GITHUB_ACCESS_TOKEN}</code> 就是我们刚才为access_token配置的环境变量中的变量名。</li>\n</ul>\n<p>然后提交到github上就会自动部署了，可以去travis网站查看部署日志。</p>\n<p>7.自动部署时遇到的一些问题</p>\n<p>1)access_token变量设置出错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The previous command failed, possibly due to a malformed secure environment variable.</span><br><span class=\"line\">Please be sure to escape special characters such as &apos; &apos; and &apos;$&apos;.</span><br><span class=\"line\">For more information, see https://docs.travis-ci.com/user/encryption-keys.</span><br></pre></td></tr></table></figure>\n<p>解决: 取变量名称时不要使用横杠，单绰号，美元符号等特殊字符</p>\n<p>2)WARN  No layout: index.html</p>\n<p>解决: 这是Travis没有把主题从你的github仓库中下载下来，去主题目录下看，点不进去，这是github为了保护原作者，你在.travis.yml中写上克隆主题的命令，或是将对应主题中.git目录删除</p>\n<p>3)如果使用gulp报less不是当前所支持的版本</p>\n<p>解决: 将package.json文件中gulp的版本改为3.9.1，如果是4.0以上版本会报这个错</p>\n<p>4)部署后favicon.ico图标不显示</p>\n<p>解决：更换一下favicon.ico图标路径，放到img目录下, 引用 favicon: img/favicon.ico</p>\n<h4 id=\"插件安装\"><a href=\"#插件安装\" class=\"headerlink\" title=\"插件安装\"></a>插件安装</h4><p>页面点击出现爱心效果:</p>\n<p>主题目录下 source/js/里面 新建一个love.js,复制下面的代码进去</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e,t,a</span>)</span>&#123;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">n</span>(<span class=\"params\"></span>)</span>&#123;c(<span class=\"string\">\".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;\"</span>),o(),r()&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">r</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> e=<span class=\"number\">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class=\"number\">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class=\"number\">1</span>)):(d[e].y--,d[e].scale+=<span class=\"number\">.004</span>,d[e].alpha-=<span class=\"number\">.013</span>,d[e].el.style.cssText=<span class=\"string\">\"left:\"</span>+d[e].x+<span class=\"string\">\"px;top:\"</span>+d[e].y+<span class=\"string\">\"px;opacity:\"</span>+d[e].alpha+<span class=\"string\">\";transform:scale(\"</span>+d[e].scale+<span class=\"string\">\",\"</span>+d[e].scale+<span class=\"string\">\") rotate(45deg);background:\"</span>+d[e].color+<span class=\"string\">\";z-index:99999\"</span>);requestAnimationFrame(r)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">o</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">var</span> t=<span class=\"string\">\"function\"</span>==<span class=\"keyword\">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">i</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">var</span> a=t.createElement(<span class=\"string\">\"div\"</span>);a.className=<span class=\"string\">\"heart\"</span>,d.push(&#123;<span class=\"attr\">el</span>:a,<span class=\"attr\">x</span>:e.clientX<span class=\"number\">-5</span>,<span class=\"attr\">y</span>:e.clientY<span class=\"number\">-5</span>,<span class=\"attr\">scale</span>:<span class=\"number\">1</span>,<span class=\"attr\">alpha</span>:<span class=\"number\">1</span>,<span class=\"attr\">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">c</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">var</span> a=t.createElement(<span class=\"string\">\"style\"</span>);a.type=<span class=\"string\">\"text/css\"</span>;<span class=\"keyword\">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class=\"keyword\">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class=\"string\">\"head\"</span>)[<span class=\"number\">0</span>].appendChild(a)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">s</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span><span class=\"string\">\"rgb(\"</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">\",\"</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">\",\"</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">\")\"</span>&#125;<span class=\"keyword\">var</span> d=[];e.requestAnimationFrame=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;setTimeout(e,<span class=\"number\">1e3</span>/<span class=\"number\">60</span>)&#125;&#125;(),n()&#125;(<span class=\"built_in\">window</span>,<span class=\"built_in\">document</span>);</span><br></pre></td></tr></table></figure>\n<p>然后打开主题目录下 layout/layout.ejs，文件末尾添加如下代码:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 页面点击小红心 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/love.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>点击出现文字效果:</p>\n<p>主题目录下 source/js/里面 新建一个text.js,复制下面的代码进去</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">/* 鼠标特效 */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a_idx = <span class=\"number\">0</span>;</span><br><span class=\"line\">jQuery(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$</span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"body\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"string\">\"❤富强❤\"</span>,<span class=\"string\">\"❤民主❤\"</span>,<span class=\"string\">\"❤文明❤\"</span>,<span class=\"string\">\"❤和谐❤\"</span>,<span class=\"string\">\"❤自由❤\"</span>,<span class=\"string\">\"❤平等❤\"</span>,<span class=\"string\">\"❤公正❤\"</span>,<span class=\"string\">\"❤法治❤\"</span>,<span class=\"string\">\"❤爱国❤\"</span>,<span class=\"string\">\"❤敬业❤\"</span>,<span class=\"string\">\"❤诚信❤\"</span>,<span class=\"string\">\"❤友善❤\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> $i = $(<span class=\"string\">\"&lt;span&gt;&lt;/span&gt;\"</span>).text(a[a_idx]);</span><br><span class=\"line\">        a_idx = (a_idx + <span class=\"number\">1</span>) % a.length;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> x = e.pageX,</span><br><span class=\"line\">        y = e.pageY;</span><br><span class=\"line\">        $i.css(&#123;</span><br><span class=\"line\">            <span class=\"string\">\"z-index\"</span>: <span class=\"number\">999999999999999999999999999999999999999999999999999999999999999999999</span>,</span><br><span class=\"line\">            <span class=\"string\">\"top\"</span>: y - <span class=\"number\">20</span>,</span><br><span class=\"line\">            <span class=\"string\">\"left\"</span>: x,</span><br><span class=\"line\">            <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"font-weight\"</span>: <span class=\"string\">\"bold\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"color\"</span>: <span class=\"string\">\"rgb(\"</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">\",\"</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">\",\"</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">\")\"</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        $(<span class=\"string\">\"body\"</span>).append($i);</span><br><span class=\"line\">        $i.animate(&#123;</span><br><span class=\"line\">            <span class=\"string\">\"top\"</span>: y - <span class=\"number\">180</span>,</span><br><span class=\"line\">            <span class=\"string\">\"opacity\"</span>: <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"number\">1500</span>,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            $i.remove();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后打开主题目录下 layout/layout.ejs，文件末尾添加如下代码:</p>\n<p>以上代码用到了jquery，需要<a href=\"https://raw.githubusercontent.com/aiceflower/assets/master/assets/js/jquery/jquery.min.js\" target=\"_blank\" rel=\"noopener\">下载jquery</a>，保存到source/js/目录下</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/jquery.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 页面点击文字效果 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/src/text.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>添加卡通人物：</p>\n<p>我在逛别人博客的时候偶然发现右下角居然有一个萌萌的卡通人物，还能根据你鼠标位置摇头，瞬间被吸引到了，赶紧也给自己博客添加一个吧。</p>\n<p>输入如下命令获取 live2d ：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>\n<p>输入以下命令，下载相应的模型，将 packagename 更换成模型名称即可，更多模型选择请<a href=\"https://github.com/xiazeyu/live2d-widget-models\">点击此处</a>，各个模型的预览请<a href=\"https://huaji8.top/post/live2d-plugin-2.0/\" target=\"_blank\" rel=\"noopener\">访问原作者的博客</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install packagename</span><br></pre></td></tr></table></figure>\n<p>打开主题目录下的 _config.yml 文件，添加如下代码：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">live2d:</span></span><br><span class=\"line\">\t<span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"attr\">scriptFrom:</span> <span class=\"string\">local</span></span><br><span class=\"line\">\t<span class=\"attr\">model:</span> </span><br><span class=\"line\">\t\t<span class=\"attr\">use:</span> <span class=\"string\">live2d-widget-model-haruto</span> <span class=\"comment\">#模型选择</span></span><br><span class=\"line\">\t<span class=\"attr\">display:</span> </span><br><span class=\"line\">\t\t<span class=\"attr\">position:</span> <span class=\"string\">right</span>  <span class=\"comment\">#模型位置</span></span><br><span class=\"line\">\t\t<span class=\"attr\">width:</span> <span class=\"number\">150</span>       <span class=\"comment\">#模型宽度</span></span><br><span class=\"line\">\t\t<span class=\"attr\">height:</span> <span class=\"number\">300</span>      <span class=\"comment\">#模型高度</span></span><br><span class=\"line\">\t<span class=\"attr\">mobile:</span> </span><br><span class=\"line\">\t\t<span class=\"attr\">show:</span> <span class=\"literal\">false</span>      <span class=\"comment\">#是否在手机端显示</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>市面上已经有很多的博客网站了，像CSDN、博客园、简书等等，这些博客平台固然很好，在这些平台上可以直接写文章，发表，并且在各大搜索引擎上都能搜索到。但总感觉不自由，凸显不出来你的个性，俗话说金窝银窝不如自己的狗窝，本文就教大家搭建自己的博客窝。</p>\n<h4 id=\"本文特点：\"><a href=\"#本文特点：\" class=\"headerlink\" title=\"本文特点：\"></a>本文特点：</h4><ul>\n<li>采用hexo静态博客框架，主题丰富</li>\n<li>学习成本低，快速搭建</li>\n<li>无须购买服务器，域名直接在github page平台上托管我们的博客</li>\n<li>自动部署，代码提交到github上后自动部署，无须手动</li>\n<li>好玩有趣的插件</li>\n</ul>\n<h4 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h4><p>理论上用什么操作系统都可以windows、mac、linux均可，本人采用linux，不过也不是买的linux服务器，本地使用VM搭建的linux，想搭建的可参考<a href=\"https://blog.csdn.net/q2158798/article/details/80550626\" target=\"_blank\" rel=\"noopener\">VMware安装最新版CentOS7图文教程</a>.</p>\n<h4 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h4><p><a href=\"https://nodejs.org/zh-cn/download/\" target=\"_blank\" rel=\"noopener\">下载Node.js</a>，根据不同的操作系统下载对应每户的Node.js，我下载的是linux64位的</p>\n<p><img src=\"https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/node%E4%B8%8B%E8%BD%BD.png\" alt></p>\n<p>下载完成后是.tar.xz为后缀的文件，可使用tar -Jxf xxx.tar.xz解压该文件</p>\n<p> 创建以下两个软连接，这样可以在任何目录下执行node和</p>\n<p>ln -s  ~/node-v10.15.2-linux-x64/bin/node /usr/local/bin/</p>\n<p>ln -s ~/node-v10.15.2-linux-x64/bin/npm /usr/local/bin/</p>\n<p>当然也可以linux系统中直接安装node.js，执行如下命令:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install node</span><br></pre></td></tr></table></figure>\n<p>安装完成后执行如下命令检查安装情况</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a><span id=\"env_3\">安装Git</span></h4><p>windows：到git官网上下载,<a href=\"https://gitforwindows.org/\" target=\"_blank\" rel=\"noopener\">Download git</a>,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。</p>\n<p>linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install git</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a><span id=\"env_4\">安装Hexo</span></h4><p>把node和git安装好后就可以安装hexo了，首先创建一个目录，该目录用于存入hexo相关的文件，以后你写的博客内容也存放于这个目录中，cd到这个目录中，执行如下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>安装hexo</span><br><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\"><span class=\"meta\">#</span>检查hexo是否安装成功</span><br><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure>\n<p>安装完成后，在该目录下执行如下命令来对hexo进行初始化</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>hexo初始化完成后包含如下相关目录：</p>\n<p>_config.yml  db.json  node_modules  package.json  package-lock.json  scaffolds  source  themes</p>\n<p>其中_config.yml用于存入hexo相关配置，source中存放的是博客文章，以后写的文章都要存放到这个目录下，themes中存放的是主题</p>\n<p>启动hexo</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>可使用-p port 指定启动端口，默认是4000端口</span><br><span class=\"line\">hexo s &amp;</span><br></pre></td></tr></table></figure>\n<p>访问hexo,打开浏览器输入<a href=\"http://127.0.0.1:4000就可以看到博客页面了，如果访问不到，请检查ip、端口、防火墙\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:4000就可以看到博客页面了，如果访问不到，请检查ip、端口、防火墙</a></p>\n<p><img src=\"https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/hexo_init_page.png\" alt></p>\n<p>这样个人博客就搭建完成了，是不是很简单。</p>\n<p>不过这才完成了一部分，如果你想要做成跟我一样的页面风格，或是选择其它风格就需要更换博客的主题。</p>\n<p>你可以到hexo的官网<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">寻找主题</a>,找到自己想要的风格后，点击主题名称会跳转到对应的github，将其克隆到上面的themes目录下就可以了，克隆命令:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/shenliyang/hexo-theme-snippet.git</span><br></pre></td></tr></table></figure>\n<p>然后打开_config.yml 文件，找到theme (hexo默认主题是theme: landscape)修改成你刚才克隆的主题名称，然后重新启动hexo就可以了。</p>\n<p>如果hexo官网的主题你都不喜欢，也可以github网站搜索hexo选择一些高star的主题，当然你了解了hexo后也可自行修改，打造自己的主题。</p>\n<h4 id=\"将hexo部署到github上\"><a href=\"#将hexo部署到github上\" class=\"headerlink\" title=\"将hexo部署到github上\"></a>将hexo部署到github上</h4><p>1.在github上创建自己的仓库，仓库名称为you_github_name.github.io,仓库必须为public，如果你愿意花钱也可以设置成私有</p>\n<p>2.生成ssh-keygen添加到github</p>\n<p>ssh-keygen用于提高代码的时候不用手动输入github用户名密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C \"your_email\"</span><br></pre></td></tr></table></figure>\n<p>执行上术命令后会,在用户家目录下生成.ssh目录复制id_rsa.pub中的内容到github上</p>\n<p>登陆你的github,右上角找到settings，然后点击 SSH and GPG keys ,New SSH key</p>\n<p><img src=\"https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/github_ssh_key.png\" alt></p>\n<p>查看是否配置成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>配置成功后，你还需要配置:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name \"your_github_name\"// 你的github用户名，非昵称</span><br><span class=\"line\">git config --global user.email  \"your_github_email\"// 填写你的github注册邮箱</span><br></pre></td></tr></table></figure>\n<p>2.安装deploy-git</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>3.修改_config.yml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"attr\">https://github.com/you_github_name/you_github_name.github.io.git</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n<p>4.部署</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo c</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>部署后会在目录中生成public目录，deployer-git会把该目录下的静态资源提交到你之前创建的github仓库中。</p>\n<p>5.设置GitHub Pages</p>\n<p>github pages的原理是，将你提交到仓库的静态资源，使用github提供的域名进行访问。</p>\n<p>进入你创建的your_github_name.github.io仓库，点击右边的settings,下拉到到GitHub Pages,选择master分支，保存，并随便选择一个主题。</p>\n<p><img src=\"https://raw.githubusercontent.com/aiceflower/assets/master/img/hexo/git_hub_pages.png\" alt></p>\n<p>设置完成后，会在GitHub Pages下面出现 Your site is published at <a href=\"https://xxx.github.io/\" target=\"_blank\" rel=\"noopener\">https://xxx.github.io/</a></p>\n<p>这时候你就可以通过<a href=\"https://xxx.github.io/,访问你的博客了。\" target=\"_blank\" rel=\"noopener\">https://xxx.github.io/,访问你的博客了。</a></p>\n<p>6.hexo常用命令</p>\n<h4 id=\"博主主题安装与配置\"><a href=\"#博主主题安装与配置\" class=\"headerlink\" title=\"博主主题安装与配置\"></a>博主主题安装与配置</h4><p>这里提供我自己博客主题安装与配置，如果你选择了其它的主题，配置也是类似的。</p>\n<p>下载主题:</p>\n<p>主题github：<a href=\"https://github.com/shenliyang/hexo-theme-snippet\">https://github.com/shenliyang/hexo-theme-snippet</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">themes]#</span> git clone https://github.com/shenliyang/hexo-theme-snippet.git snippet</span><br></pre></td></tr></table></figure>\n<p>修改配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">主配置：</span></span><br><span class=\"line\"><span class=\"comment\"># 网站title</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> </span><br><span class=\"line\"><span class=\"comment\">#网站作者</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"string\">aiceflower</span></span><br><span class=\"line\"><span class=\"comment\">#网站语言,在主题的languages目录下可查看支持的语言类型</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-CN</span></span><br><span class=\"line\"><span class=\"comment\">#主题</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">snippet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">主题配置:</span></span><br><span class=\"line\"><span class=\"comment\">#一般的配置在snippet的README都能看到，这里主要说些常用的和容易忽略的配置。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#修改网站图标</span></span><br><span class=\"line\"><span class=\"comment\">#我用的是雪花图标，在https://www.iconfont.cn搜索自己喜欢的图标，下载并命名为favicon.ico ，替换掉</span></span><br><span class=\"line\"><span class=\"comment\">#themes/snippet/source 目录下的favicon.ico</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#网站宣传语</span></span><br><span class=\"line\"><span class=\"attr\">branding:</span> <span class=\"string\">你的宣传语</span></span><br><span class=\"line\"><span class=\"comment\">#宣传语修改后，在网页审查元素仍能看到 \"从未如此简单有趣\"，虽然被隐藏了，但还是感觉不爽，找到snippet/layout/_partial目录下的header.ejs 文件删除里面的\"从未如此简单有趣\"就可以了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 各个小工具的设置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#搜索 (需要安装插件:npm i hexo-generator-json-content@2.2.0 -S)</span></span><br><span class=\"line\"><span class=\"attr\">jsonContent:</span></span><br><span class=\"line\"><span class=\"attr\">  searchLocal:</span> <span class=\"literal\">true</span> <span class=\"string\">//</span> <span class=\"string\">是否启用本地搜索</span></span><br><span class=\"line\"><span class=\"attr\">  searchGoogle:</span> <span class=\"literal\">false</span> <span class=\"string\">//是否启用谷歌搜索</span></span><br><span class=\"line\"><span class=\"attr\">  posts:</span></span><br><span class=\"line\"><span class=\"attr\">    title:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    text:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    content:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    categories:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">    tags:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"> <span class=\"comment\">#网站公告，支持 html 和 纯文本</span></span><br><span class=\"line\"><span class=\"attr\"> notification:</span> <span class=\"string\">|-</span></span><br><span class=\"line\"> \t<span class=\"string\">&lt;p&gt;公告&lt;/p&gt;</span></span><br><span class=\"line\"> <span class=\"comment\"># 社交设置</span></span><br><span class=\"line\"><span class=\"attr\"> social:</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">Github</span></span><br><span class=\"line\"><span class=\"attr\">    icon:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">    href:</span> <span class=\"string\">//github.com/aiceflower</span></span><br><span class=\"line\"> <span class=\"comment\"># 文章分类设置</span></span><br><span class=\"line\"><span class=\"attr\">cate_config:</span></span><br><span class=\"line\"><span class=\"attr\">   show_count:</span> <span class=\"literal\">true</span> <span class=\"comment\">#显示数字</span></span><br><span class=\"line\"><span class=\"attr\">   show_current:</span> <span class=\"literal\">true</span> <span class=\"comment\">#高亮当前</span></span><br><span class=\"line\"> <span class=\"comment\"># 文章归档</span></span><br><span class=\"line\"><span class=\"attr\"> arch_config:</span></span><br><span class=\"line\"><span class=\"attr\">   type:</span> <span class=\"string\">'monthly'</span></span><br><span class=\"line\"><span class=\"attr\">   format:</span> <span class=\"string\">'YYYY年MM月'</span></span><br><span class=\"line\"><span class=\"attr\">   show_count:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">   order:</span> <span class=\"bullet\">-1</span></span><br><span class=\"line\"> <span class=\"comment\"># 标签云设置</span></span><br><span class=\"line\"><span class=\"attr\"> tagcloud:</span></span><br><span class=\"line\"><span class=\"attr\">  tag3d:</span> <span class=\"literal\">false</span> <span class=\"string\">//</span> <span class=\"string\">是否启用3D标签云</span></span><br><span class=\"line\"><span class=\"attr\">  textColour:</span> <span class=\"string\">'#444'</span> <span class=\"string\">//</span> <span class=\"string\">字体颜色</span></span><br><span class=\"line\"><span class=\"attr\">  outlineMethod:</span> <span class=\"string\">'block'</span> <span class=\"string\">//</span> <span class=\"string\">选中模式(outline|classic|block|colour|size|none)</span></span><br><span class=\"line\"><span class=\"attr\">  outlineColour:</span> <span class=\"string\">'#FFDAB9'</span> <span class=\"string\">//</span> <span class=\"string\">选中模式的颜色</span></span><br><span class=\"line\"><span class=\"attr\">  interval:</span> <span class=\"number\">30</span> <span class=\"string\">//</span> <span class=\"string\">动画帧之间的时间间隔，值越大，转动幅度越大</span></span><br><span class=\"line\"><span class=\"attr\">  freezeActive:</span> <span class=\"literal\">true</span> <span class=\"string\">//</span> <span class=\"string\">选中的标签是否继续滚动</span></span><br><span class=\"line\"><span class=\"attr\">  frontSelect:</span> <span class=\"literal\">true</span> <span class=\"string\">//</span> <span class=\"string\">不选标签云后部的标签</span></span><br><span class=\"line\"><span class=\"attr\">  reverse:</span> <span class=\"literal\">true</span> <span class=\"string\">//</span> <span class=\"string\">是否反向触发</span></span><br><span class=\"line\"><span class=\"attr\">  wheelZoom:</span> <span class=\"literal\">false</span> <span class=\"string\">//</span> <span class=\"string\">是否启用鼠标滚轮</span></span><br><span class=\"line\"> <span class=\"comment\"># 友链&#123;@链接名称：链接地址&#123;@links:[,,,]&#125;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">links:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">Hexo官网:</span> <span class=\"attr\">https://hexo.io/zh-cn/</span></span><br><span class=\"line\"> <span class=\"comment\">#自定义小工具</span></span><br><span class=\"line\"> <span class=\"number\">1.</span><span class=\"string\">widgets下增加一条</span> <span class=\"string\">new_widgets</span></span><br><span class=\"line\"> <span class=\"number\">2.</span><span class=\"string\">layout/_widget下增加一个new_widgets.ejs文件</span></span><br><span class=\"line\"> <span class=\"string\">注意名称对应</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">#头部背景图片</span></span><br><span class=\"line\"><span class=\"attr\"> banner:</span></span><br><span class=\"line\"> \t<span class=\"attr\">img:</span> <span class=\"string\">/img/header.jpg</span></span><br><span class=\"line\"> <span class=\"comment\"># 文章摘要</span></span><br><span class=\"line\"> <span class=\"comment\"># 文章摘要&#123;@摘要显示优先级：自定义摘要 &gt; 自动截取摘要 &#125;</span></span><br><span class=\"line\"> <span class=\"comment\"># 自定义摘要范围&#123;@&lt;!--more--&gt;:截取more之前的内容为摘要&#125;</span></span><br><span class=\"line\"> <span class=\"comment\"># 自动截取摘要&#123;@excerptLength:自动截取文章前多少个字为摘要，不配置默认：120字&#125;</span></span><br><span class=\"line\"><span class=\"attr\">excerptLength:</span> <span class=\"number\">120</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#文章列表缩略图,在以下图片中随机选取</span></span><br><span class=\"line\"><span class=\"attr\">defaultImgs:</span></span><br><span class=\"line\"><span class=\"attr\">  - http:</span><span class=\"string\">//www.example.jpg</span> <span class=\"string\">//远程图片链接示例</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">/img/default-1.jpg</span> <span class=\"string\">//本地图片链接示例</span></span><br><span class=\"line\"><span class=\"comment\">#文章目录(关闭后阅读文章时显示widgets，右边的小工具)</span></span><br><span class=\"line\"><span class=\"attr\">toc:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文章内声明&#123;@declaration: &#123;enable:是否开启,title:声明标题,tip:提示内容&#125;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">declaration:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  title:</span> <span class=\"string\">'转载声明'</span></span><br><span class=\"line\"><span class=\"attr\">  tip:</span> <span class=\"string\">|-</span></span><br><span class=\"line\">      <span class=\"string\">商业转载请联系作者获得授权,非商业转载请注明出处</span> <span class=\"string\">©</span> <span class=\"string\">&lt;a</span> <span class=\"string\">href=\"\"</span> <span class=\"string\">target=\"_blank\"&gt;Snippet&lt;/a&gt;</span></span><br><span class=\"line\">      </span><br><span class=\"line\"><span class=\"comment\">## 文章打赏&#123;@reward: &#123;alipay:支付宝打赏,wepay:微信打赏,tip:打赏提示语; 链接都为空,关闭打赏功能&#125;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">reward:</span></span><br><span class=\"line\"><span class=\"attr\">  alipay:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">  wepay:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">  tip:</span> <span class=\"string\">Maybe</span> <span class=\"string\">you</span> <span class=\"string\">could</span> <span class=\"string\">buy</span> <span class=\"string\">me</span> <span class=\"string\">a</span> <span class=\"string\">cup</span> <span class=\"string\">of</span> <span class=\"string\">coffee.</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#评论</span></span><br><span class=\"line\"><span class=\"comment\"># Valine评论 </span></span><br><span class=\"line\"><span class=\"attr\">valine:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  appId:</span> </span><br><span class=\"line\"><span class=\"attr\">  appKey:</span></span><br><span class=\"line\"><span class=\"attr\">  placeholder:</span> <span class=\"string\">说点什么吧</span></span><br><span class=\"line\"><span class=\"attr\">  notify:</span> <span class=\"literal\">false</span> <span class=\"string\">//</span> <span class=\"string\">邮件通知</span></span><br><span class=\"line\"><span class=\"attr\">  verify:</span> <span class=\"literal\">false</span> <span class=\"string\">//</span> <span class=\"string\">验证码</span></span><br><span class=\"line\"><span class=\"attr\">  avatar:</span> <span class=\"string\">mm</span> <span class=\"string\">//</span> <span class=\"string\">avatar头像</span></span><br><span class=\"line\"><span class=\"attr\">  meta:</span> <span class=\"string\">nick,mail</span> <span class=\"string\">//</span> <span class=\"string\">输入框内容，可选值nick,mail,link</span></span><br><span class=\"line\"><span class=\"attr\">  pageSize:</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"number\">1.</span><span class=\"string\">到LeanCloud官网(https://leancloud.cn/)注册一个账号</span></span><br><span class=\"line\"><span class=\"number\">2.</span><span class=\"string\">随便创建一个应用</span></span><br><span class=\"line\"><span class=\"number\">3.</span><span class=\"string\">进入应用--&gt;设置--&gt;应用key(这里有appId和appKey)</span></span><br><span class=\"line\"><span class=\"number\">4.</span><span class=\"string\">设置--&gt;安全中心--&gt;Web安全哉名中输入你的博客域名--&gt;保存</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#文章Front-matter设置(是文件最上方以 --- 分隔的区域)</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> \t\t<span class=\"string\">标题</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> \t\t<span class=\"string\">时间</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span> <span class=\"string\">分类</span> <span class=\"string\">['分类1','分类2']</span> </span><br><span class=\"line\"><span class=\"attr\">tags:</span> \t\t<span class=\"string\">标签</span> <span class=\"string\">['标签1','标签2']</span>    </span><br><span class=\"line\"><span class=\"attr\">comments:</span> \t<span class=\"string\">是否开启评论</span> <span class=\"literal\">true</span> </span><br><span class=\"line\"><span class=\"attr\">img:</span>        <span class=\"string\">自定义缩略图</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"自动部署\"><a href=\"#自动部署\" class=\"headerlink\" title=\"自动部署\"></a>自动部署</h4><p>本文使用Travis进行自动部署，对个人而言，就是让你的代码在提交到远程(这里是GitHub)，立即自动编译，自动化测试、自动部署等。不需要在担心更换电脑时，还要从新部署环境的问题，只要你能向远程推送文章，其他的事情就都可以交给Travis CI处理就ok了。</p>\n<p>1.<a href=\"https://www.travis-ci.org\" target=\"_blank\" rel=\"noopener\">注册travis账号</a>关联你的github就可以了</p>\n<p>2.打开你需要自动部署的仓库(travis的settings会自动列出你github中所有的仓库，找到待部署的仓库，把右边的开关键拨到打开的状态。)</p>\n<p>3.为 Travis CI 配置登录权限，Travis部署时需要将代码提交到github上所以需要github授权</p>\n<p>首先去GitHub给账户添加一个Personal Access Token。打开GitHub，在 <em>Settings</em> 页面中找到 <em>Developer settings</em> ，打开 <em>Personal access tokens</em> 标签页，点击新建一个token。为这个Token取个名字，然后勾选 <em>repo</em> 这一栏，点击保存。如果不出意外，保存后屏幕上会显示一行字符串——这就是服务器为你生成的口令。</p>\n<p>4.我们在Travis CI中把口令设置为一个环境变量打开刚才Travis CI中blog仓库的设置页面，在环境变量一栏把 <em>access_token</em> 作为一个value填写进去，然后给它取个好听的名字，点击添加。</p>\n<p>5.拷贝文件:将主题目录下 gulpfile.js、travis.sh、.travis.yml拷贝到项目根目录下, Travis 要求项目的根目录下面，必须有一个.travis.yml文件。这是配置文件，指定了 Travis 的行为。该文件必须保存在 Github 仓库里面，一旦代码仓库有新的 Commit，Travis 就会去找这个文件，执行里面的命令。</p>\n<p>6.修改配置，修改.travis.yml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">before_script:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">user.name</span> <span class=\"string\">\"YOUR_NAME\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">user.email</span> <span class=\"string\">\"YOUR_EMAIL\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">sed</span> <span class=\"bullet\">-i''</span> <span class=\"string\">\"s~https://github.com/&lt;yourname&gt;/&lt;reponame&gt;.git~https://$&#123;GITHUB_ACCESS_TOKEN&#125;@github.com/&lt;yourname&gt;/&lt;reopname&gt;.git~\"</span> <span class=\"string\">_config.yml</span></span><br><span class=\"line\"><span class=\"attr\">script:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">hexo</span> <span class=\"string\">g</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">hexo</span> <span class=\"string\">d</span></span><br></pre></td></tr></table></figure>\n<p>before_script 指的是在执行操作前要运行的命令。</p>\n<ul>\n<li>这里我们指定了 git 的一些配置</li>\n<li>然后使用sed命令将hexo的配置文件中的部署仓库的链接替换成了access_token形式，其中前面的那一串是你在<code>_config.yml</code>中的链接，后面的那一串是token形式的链接。 <code>${GITHUB_ACCESS_TOKEN}</code> 就是我们刚才为access_token配置的环境变量中的变量名。</li>\n</ul>\n<p>然后提交到github上就会自动部署了，可以去travis网站查看部署日志。</p>\n<p>7.自动部署时遇到的一些问题</p>\n<p>1)access_token变量设置出错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The previous command failed, possibly due to a malformed secure environment variable.</span><br><span class=\"line\">Please be sure to escape special characters such as &apos; &apos; and &apos;$&apos;.</span><br><span class=\"line\">For more information, see https://docs.travis-ci.com/user/encryption-keys.</span><br></pre></td></tr></table></figure>\n<p>解决: 取变量名称时不要使用横杠，单绰号，美元符号等特殊字符</p>\n<p>2)WARN  No layout: index.html</p>\n<p>解决: 这是Travis没有把主题从你的github仓库中下载下来，去主题目录下看，点不进去，这是github为了保护原作者，你在.travis.yml中写上克隆主题的命令，或是将对应主题中.git目录删除</p>\n<p>3)如果使用gulp报less不是当前所支持的版本</p>\n<p>解决: 将package.json文件中gulp的版本改为3.9.1，如果是4.0以上版本会报这个错</p>\n<p>4)部署后favicon.ico图标不显示</p>\n<p>解决：更换一下favicon.ico图标路径，放到img目录下, 引用 favicon: img/favicon.ico</p>\n<h4 id=\"插件安装\"><a href=\"#插件安装\" class=\"headerlink\" title=\"插件安装\"></a>插件安装</h4><p>页面点击出现爱心效果:</p>\n<p>主题目录下 source/js/里面 新建一个love.js,复制下面的代码进去</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e,t,a</span>)</span>&#123;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">n</span>(<span class=\"params\"></span>)</span>&#123;c(<span class=\"string\">\".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;\"</span>),o(),r()&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">r</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> e=<span class=\"number\">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class=\"number\">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class=\"number\">1</span>)):(d[e].y--,d[e].scale+=<span class=\"number\">.004</span>,d[e].alpha-=<span class=\"number\">.013</span>,d[e].el.style.cssText=<span class=\"string\">\"left:\"</span>+d[e].x+<span class=\"string\">\"px;top:\"</span>+d[e].y+<span class=\"string\">\"px;opacity:\"</span>+d[e].alpha+<span class=\"string\">\";transform:scale(\"</span>+d[e].scale+<span class=\"string\">\",\"</span>+d[e].scale+<span class=\"string\">\") rotate(45deg);background:\"</span>+d[e].color+<span class=\"string\">\";z-index:99999\"</span>);requestAnimationFrame(r)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">o</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">var</span> t=<span class=\"string\">\"function\"</span>==<span class=\"keyword\">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">i</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">var</span> a=t.createElement(<span class=\"string\">\"div\"</span>);a.className=<span class=\"string\">\"heart\"</span>,d.push(&#123;<span class=\"attr\">el</span>:a,<span class=\"attr\">x</span>:e.clientX<span class=\"number\">-5</span>,<span class=\"attr\">y</span>:e.clientY<span class=\"number\">-5</span>,<span class=\"attr\">scale</span>:<span class=\"number\">1</span>,<span class=\"attr\">alpha</span>:<span class=\"number\">1</span>,<span class=\"attr\">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">c</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">var</span> a=t.createElement(<span class=\"string\">\"style\"</span>);a.type=<span class=\"string\">\"text/css\"</span>;<span class=\"keyword\">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class=\"keyword\">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class=\"string\">\"head\"</span>)[<span class=\"number\">0</span>].appendChild(a)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">s</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span><span class=\"string\">\"rgb(\"</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">\",\"</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">\",\"</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">\")\"</span>&#125;<span class=\"keyword\">var</span> d=[];e.requestAnimationFrame=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;setTimeout(e,<span class=\"number\">1e3</span>/<span class=\"number\">60</span>)&#125;&#125;(),n()&#125;(<span class=\"built_in\">window</span>,<span class=\"built_in\">document</span>);</span><br></pre></td></tr></table></figure>\n<p>然后打开主题目录下 layout/layout.ejs，文件末尾添加如下代码:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 页面点击小红心 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/love.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>点击出现文字效果:</p>\n<p>主题目录下 source/js/里面 新建一个text.js,复制下面的代码进去</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">/* 鼠标特效 */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a_idx = <span class=\"number\">0</span>;</span><br><span class=\"line\">jQuery(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$</span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"body\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"string\">\"❤富强❤\"</span>,<span class=\"string\">\"❤民主❤\"</span>,<span class=\"string\">\"❤文明❤\"</span>,<span class=\"string\">\"❤和谐❤\"</span>,<span class=\"string\">\"❤自由❤\"</span>,<span class=\"string\">\"❤平等❤\"</span>,<span class=\"string\">\"❤公正❤\"</span>,<span class=\"string\">\"❤法治❤\"</span>,<span class=\"string\">\"❤爱国❤\"</span>,<span class=\"string\">\"❤敬业❤\"</span>,<span class=\"string\">\"❤诚信❤\"</span>,<span class=\"string\">\"❤友善❤\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> $i = $(<span class=\"string\">\"&lt;span&gt;&lt;/span&gt;\"</span>).text(a[a_idx]);</span><br><span class=\"line\">        a_idx = (a_idx + <span class=\"number\">1</span>) % a.length;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> x = e.pageX,</span><br><span class=\"line\">        y = e.pageY;</span><br><span class=\"line\">        $i.css(&#123;</span><br><span class=\"line\">            <span class=\"string\">\"z-index\"</span>: <span class=\"number\">999999999999999999999999999999999999999999999999999999999999999999999</span>,</span><br><span class=\"line\">            <span class=\"string\">\"top\"</span>: y - <span class=\"number\">20</span>,</span><br><span class=\"line\">            <span class=\"string\">\"left\"</span>: x,</span><br><span class=\"line\">            <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"font-weight\"</span>: <span class=\"string\">\"bold\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"color\"</span>: <span class=\"string\">\"rgb(\"</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">\",\"</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">\",\"</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">\")\"</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        $(<span class=\"string\">\"body\"</span>).append($i);</span><br><span class=\"line\">        $i.animate(&#123;</span><br><span class=\"line\">            <span class=\"string\">\"top\"</span>: y - <span class=\"number\">180</span>,</span><br><span class=\"line\">            <span class=\"string\">\"opacity\"</span>: <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"number\">1500</span>,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            $i.remove();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后打开主题目录下 layout/layout.ejs，文件末尾添加如下代码:</p>\n<p>以上代码用到了jquery，需要<a href=\"https://raw.githubusercontent.com/aiceflower/assets/master/assets/js/jquery/jquery.min.js\" target=\"_blank\" rel=\"noopener\">下载jquery</a>，保存到source/js/目录下</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/jquery.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 页面点击文字效果 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/src/text.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>添加卡通人物：</p>\n<p>我在逛别人博客的时候偶然发现右下角居然有一个萌萌的卡通人物，还能根据你鼠标位置摇头，瞬间被吸引到了，赶紧也给自己博客添加一个吧。</p>\n<p>输入如下命令获取 live2d ：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>\n<p>输入以下命令，下载相应的模型，将 packagename 更换成模型名称即可，更多模型选择请<a href=\"https://github.com/xiazeyu/live2d-widget-models\">点击此处</a>，各个模型的预览请<a href=\"https://huaji8.top/post/live2d-plugin-2.0/\" target=\"_blank\" rel=\"noopener\">访问原作者的博客</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install packagename</span><br></pre></td></tr></table></figure>\n<p>打开主题目录下的 _config.yml 文件，添加如下代码：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">live2d:</span></span><br><span class=\"line\">\t<span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"attr\">scriptFrom:</span> <span class=\"string\">local</span></span><br><span class=\"line\">\t<span class=\"attr\">model:</span> </span><br><span class=\"line\">\t\t<span class=\"attr\">use:</span> <span class=\"string\">live2d-widget-model-haruto</span> <span class=\"comment\">#模型选择</span></span><br><span class=\"line\">\t<span class=\"attr\">display:</span> </span><br><span class=\"line\">\t\t<span class=\"attr\">position:</span> <span class=\"string\">right</span>  <span class=\"comment\">#模型位置</span></span><br><span class=\"line\">\t\t<span class=\"attr\">width:</span> <span class=\"number\">150</span>       <span class=\"comment\">#模型宽度</span></span><br><span class=\"line\">\t\t<span class=\"attr\">height:</span> <span class=\"number\">300</span>      <span class=\"comment\">#模型高度</span></span><br><span class=\"line\">\t<span class=\"attr\">mobile:</span> </span><br><span class=\"line\">\t\t<span class=\"attr\">show:</span> <span class=\"literal\">false</span>      <span class=\"comment\">#是否在手机端显示</span></span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjszlvm6k000110ef4jv4oj6g","category_id":"cjszsnbbz0000g8efcx19xmm1","_id":"cjszsnbc20004g8efv5zas1m6"},{"post_id":"cjszlvm6k000110ef4jv4oj6g","category_id":"cjszsnbc20003g8ef3crp5w23","_id":"cjszsnbc20005g8efxa5d4tg6"},{"post_id":"cjt3p3qoc0000lnef700zxqi6","category_id":"cjt3p3qog0001lnefuc7ttcdb","_id":"cjt3p3qoj0005lnefw4dpu29y"},{"post_id":"cjt3p3qoc0000lnef700zxqi6","category_id":"cjt3p3qoi0004lnefqertkkfe","_id":"cjt3p3qoj0006lnefqznlaikp"}],"PostTag":[{"post_id":"cjszlvm6k000110ef4jv4oj6g","tag_id":"cjszlvm6r000310efpug8tb4p","_id":"cjszlvm6s000410efu8p17v30"},{"post_id":"cjszlvm6k000110ef4jv4oj6g","tag_id":"cjszsnbc10001g8efxr4d74je","_id":"cjszsnbc10002g8efh2lgx73q"},{"post_id":"cjt3p3qoc0000lnef700zxqi6","tag_id":"cjt3p3qoi0002lnefcbu8tx3b","_id":"cjt3p3qoi0003lnefn9u4ky83"}],"Tag":[{"name":"jdk源码","_id":"cjszlvm6r000310efpug8tb4p"},{"name":"java","_id":"cjszsnbc10001g8efxr4d74je"},{"name":"hexo","_id":"cjt3p3qoi0002lnefcbu8tx3b"}]}}